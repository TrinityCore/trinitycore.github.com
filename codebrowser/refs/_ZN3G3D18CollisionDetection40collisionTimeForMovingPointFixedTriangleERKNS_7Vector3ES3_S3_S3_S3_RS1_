<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='515' type='static float G3D::CollisionDetection::collisionTimeForMovingPointFixedTriangle(const G3D::Vector3 &amp; orig, const G3D::Vector3 &amp; dir, const G3D::Vector3 &amp; v0, const G3D::Vector3 &amp; v1, const G3D::Vector3 &amp; v2, G3D::Vector3 &amp; location)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='496'>/**
       Calculates time between the intersection of a moving point and a fixed
       triangle.

       @note This is only a one sided collision test.   The side defined by
       the triangle&apos;s surface normal is the only one tested.  For a two sided
       collision, call the function once for each side&apos;s surface normal.

       @param orig        Moving point.
       @param dir        Point&apos;s velocity.
      @param v0         Triangle vertex 1.
      @param v1         Triangle vertex 2.
      @param v2         Triangle vertex 3
       @param location    Location of collision. [Post Condition]
                           (Infinite vector on no collision)

       @return Time til collision.  If there is no collision then the return
               value will be inf().
     */</doc>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='515' type='static float G3D::CollisionDetection::collisionTimeForMovingPointFixedTriangle(const G3D::Vector3 &amp; orig, const G3D::Vector3 &amp; dir, const G3D::Vector3 &amp; v0, const G3D::Vector3 &amp; v1, const G3D::Vector3 &amp; v2, G3D::Vector3 &amp; location)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='496'>/**
       Calculates time between the intersection of a moving point and a fixed
       triangle.

       @note This is only a one sided collision test.   The side defined by
       the triangle&apos;s surface normal is the only one tested.  For a two sided
       collision, call the function once for each side&apos;s surface normal.

       @param orig        Moving point.
       @param dir        Point&apos;s velocity.
      @param v0         Triangle vertex 1.
      @param v1         Triangle vertex 2.
      @param v2         Triangle vertex 3
       @param location    Location of collision. [Post Condition]
                           (Infinite vector on no collision)

       @return Time til collision.  If there is no collision then the return
               value will be inf().
     */</doc>
