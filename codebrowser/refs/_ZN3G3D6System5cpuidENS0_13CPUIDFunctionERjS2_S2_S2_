<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/System.h' l='156' type='static void G3D::System::cpuid(G3D::System::CPUIDFunction func, uint32 &amp; areg, uint32 &amp; breg, uint32 &amp; creg, uint32 &amp; dreg)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/System.h' l='149'>/** Helper macro to call cpuid functions and return all values 

       See http://software.intel.com/en-us/articles/intel-64-architecture-processor-topology-enumeration/
       or  http://www.amd.com/us-en/assets/content_type/white_papers_and_tech_docs/25481.pdf

       for description of the arguments.
    */</doc>
<use f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='150' u='c' c='_ZN3G3D6System4initEv'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='179' u='c' c='_ZN3G3D6System4initEv'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='184' u='c' c='_ZN3G3D6System4initEv'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='563' u='c' c='_ZN3G3D6System30getStandardProcessorExtensionsEv'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='576' u='c' c='_ZN3G3D6System30getStandardProcessorExtensionsEv'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='1704' type='static void G3D::System::cpuid(G3D::System::CPUIDFunction func, uint32 &amp; eax, uint32 &amp; ebx, uint32 &amp; ecx, uint32 &amp; edx)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='1701'>// See http://sam.zoy.org/blog/2007-04-13-shlib-with-non-pic-code-have-inline-assembly-and-pic-mix-well
// for a discussion of why the second version saves ebx; it allows 32-bit code to compile with the -fPIC option.
// On 64-bit x86, PIC code has a dedicated rip register for PIC so there is no ebx conflict.</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/System.h' l='156' type='static void G3D::System::cpuid(G3D::System::CPUIDFunction func, uint32 &amp; areg, uint32 &amp; breg, uint32 &amp; creg, uint32 &amp; dreg)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/System.h' l='149'>/** Helper macro to call cpuid functions and return all values 

       See http://software.intel.com/en-us/articles/intel-64-architecture-processor-topology-enumeration/
       or  http://www.amd.com/us-en/assets/content_type/white_papers_and_tech_docs/25481.pdf

       for description of the arguments.
    */</doc>
<use f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='150' u='c' c='_ZN3G3D6System4initEv'/>
<use f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='179' u='c' c='_ZN3G3D6System4initEv'/>
<use f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='184' u='c' c='_ZN3G3D6System4initEv'/>
<use f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='563' u='c' c='_ZN3G3D6System30getStandardProcessorExtensionsEv'/>
<use f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='576' u='c' c='_ZN3G3D6System30getStandardProcessorExtensionsEv'/>
<def f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='1704' type='static void G3D::System::cpuid(G3D::System::CPUIDFunction func, uint32 &amp; eax, uint32 &amp; ebx, uint32 &amp; ecx, uint32 &amp; edx)'/>
<doc f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='1701'>// See http://sam.zoy.org/blog/2007-04-13-shlib-with-non-pic-code-have-inline-assembly-and-pic-mix-well
// for a discussion of why the second version saves ebx; it allows 32-bit code to compile with the -fPIC option.
// On 64-bit x86, PIC code has a dedicated rip register for PIC so there is no ebx conflict.</doc>
