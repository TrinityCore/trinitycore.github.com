<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Any.h' l='605' type='const G3D::Any &amp; G3D::Any::operator[](const char * key) const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Any.h' l='603'>// Needed to prevent the operator[](int) overload from catching
    // string literals</doc>
<use f='TrinityCore3.3.5/dep/g3dlite/source/UprightFrame.cpp' l='27' u='c' c='_ZN3G3D12UprightFrameC1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/UprightFrame.cpp' l='28' u='c' c='_ZN3G3D12UprightFrameC1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/UprightFrame.cpp' l='29' u='c' c='_ZN3G3D12UprightFrameC1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/UprightFrame.cpp' l='125' u='c' c='_ZN3G3D13UprightSplineC1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/UprightFrame.cpp' l='127' u='c' c='_ZN3G3D13UprightSplineC1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/UprightFrame.cpp' l='135' u='c' c='_ZN3G3D13UprightSplineC1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector2.cpp' l='43' u='c' c='_ZN3G3D7Vector2C1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector2.cpp' l='44' u='c' c='_ZN3G3D7Vector2C1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector3.cpp' l='76' u='c' c='_ZN3G3D7Vector3C1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector3.cpp' l='77' u='c' c='_ZN3G3D7Vector3C1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector3.cpp' l='78' u='c' c='_ZN3G3D7Vector3C1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector4.cpp' l='42' u='c' c='_ZN3G3D7Vector4C1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector4.cpp' l='43' u='c' c='_ZN3G3D7Vector4C1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector4.cpp' l='44' u='c' c='_ZN3G3D7Vector4C1ERKNS_3AnyE'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Vector4.cpp' l='45' u='c' c='_ZN3G3D7Vector4C1ERKNS_3AnyE'/>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/Any.h' l='605' type='const G3D::Any &amp; G3D::Any::operator[](const char * key) const'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Any.h' l='603'>// Needed to prevent the operator[](int) overload from catching
    // string literals</doc>
<use f='TrinityCore6.x/dep/g3dlite/source/UprightFrame.cpp' l='27' u='c' c='_ZN3G3D12UprightFrameC1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/UprightFrame.cpp' l='28' u='c' c='_ZN3G3D12UprightFrameC1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/UprightFrame.cpp' l='29' u='c' c='_ZN3G3D12UprightFrameC1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/UprightFrame.cpp' l='125' u='c' c='_ZN3G3D13UprightSplineC1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/UprightFrame.cpp' l='127' u='c' c='_ZN3G3D13UprightSplineC1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/UprightFrame.cpp' l='135' u='c' c='_ZN3G3D13UprightSplineC1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector2.cpp' l='43' u='c' c='_ZN3G3D7Vector2C1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector2.cpp' l='44' u='c' c='_ZN3G3D7Vector2C1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector3.cpp' l='76' u='c' c='_ZN3G3D7Vector3C1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector3.cpp' l='77' u='c' c='_ZN3G3D7Vector3C1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector3.cpp' l='78' u='c' c='_ZN3G3D7Vector3C1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector4.cpp' l='42' u='c' c='_ZN3G3D7Vector4C1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector4.cpp' l='43' u='c' c='_ZN3G3D7Vector4C1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector4.cpp' l='44' u='c' c='_ZN3G3D7Vector4C1ERKNS_3AnyE'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Vector4.cpp' l='45' u='c' c='_ZN3G3D7Vector4C1ERKNS_3AnyE'/>
