<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Vector3.h' l='237' type='G3D::Vector3 G3D::Vector3::directionOrZero() const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Vector3.h' l='233'>/**
     Returns Vector3::zero() if the length is nearly zero, otherwise
     returns a unit vector.
     */</doc>
<use f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1043' u='c' c='_ZN3G3D18CollisionDetection39collisionTimeForMovingSphereFixedSphereERKNS_6SphereERKNS_7Vector3ES3_RS4_S7_'/>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/Vector3.h' l='237' type='G3D::Vector3 G3D::Vector3::directionOrZero() const'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Vector3.h' l='233'>/**
     Returns Vector3::zero() if the length is nearly zero, otherwise
     returns a unit vector.
     */</doc>
<use f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1043' u='c' c='_ZN3G3D18CollisionDetection39collisionTimeForMovingSphereFixedSphereERKNS_6SphereERKNS_7Vector3ES3_RS4_S7_'/>
