<dec f='include/boost/regex/v4/perl_matcher.hpp' l='503' type='bool boost::re_detail::perl_matcher::unwind(bool )'/>
<use f='include/boost/regex/v4/perl_matcher_non_recursive.hpp' l='194' u='c' c='_ZN5boost9re_detail12perl_matcher16match_all_statesEv'/>
<use f='include/boost/regex/v4/perl_matcher_non_recursive.hpp' l='201' u='c' c='_ZN5boost9re_detail12perl_matcher16match_all_statesEv'/>
<def f='include/boost/regex/v4/perl_matcher_non_recursive.hpp' l='996' type='bool boost::re_detail::perl_matcher::unwind(bool have_match)'/>
<use f='include/boost/regex/v4/perl_matcher_common.hpp' l='220' u='c' c='_ZN5boost9re_detail12perl_matcher9match_impEv'/>
<use f='include/boost/regex/v4/perl_matcher_common.hpp' l='311' u='c' c='_ZN5boost9re_detail12perl_matcher8find_impEv'/>
<doc f='include/boost/regex/v4/perl_matcher_non_recursive.hpp' l='988'>/****************************************************************************

Unwind and associated proceedures follow, these perform what normal stack
unwinding does in the recursive implementation.

****************************************************************************/</doc>
