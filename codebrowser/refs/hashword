<def f='TrinityCore6.x/dep/CascLib/src/jenkins/lookup3.c' l='175' type='uint32_t hashword(const uint32_t * k, size_t length, uint32_t initval)'/>
<doc f='TrinityCore6.x/dep/CascLib/src/jenkins/lookup3.c' l='162'>/*
--------------------------------------------------------------------
 This works on all machines.  To be useful, it requires
 -- that the key be an array of uint32_t&apos;s, and
 -- that the length be the number of uint32_t&apos;s in the key

 The function hashword() is identical to hashlittle() on little-endian
 machines, and identical to hashbig() on big-endian machines,
 except that the length has to be measured in uint32_ts rather than in
 bytes.  hashlittle() is more complicated than hashword() only because
 hashlittle() has to dance around fitting the key bytes into registers.
--------------------------------------------------------------------
*/</doc>
