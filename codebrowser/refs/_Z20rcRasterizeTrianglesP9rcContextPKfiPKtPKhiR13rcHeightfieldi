<dec f='TrinityCore3.3.5/dep/recastnavigation/Recast/Include/Recast.h' l='837' type='void rcRasterizeTriangles(rcContext * ctx, const float * verts, const int nv, const unsigned short * tris, const unsigned char * areas, const int nt, rcHeightfield &amp; solid, const int flagMergeThr = 1)'/>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Recast/Include/Recast.h' l='826'>/// Rasterizes an indexed triangle mesh into the specified heightfield.
///  @ingroup recast
///  @param[in,out]	ctx			The build context to use during the operation.
///  @param[in]		verts		The vertices. [(x, y, z) * @p nv]
///  @param[in]		nv			The number of vertices.
///  @param[in]		tris		The triangle indices. [(vertA, vertB, vertC) * @p nt]
///  @param[in]		areas		The area id&apos;s of the triangles. [Limit: &lt;= #RC_WALKABLE_AREA] [Size: @p nt]
///  @param[in]		nt			The number of triangles.
///  @param[in,out]	solid		An initialized heightfield.
///  @param[in]		flagMergeThr	The distance where the walkable flag is favored over the non-walkable flag. 
///  							[Limit: &gt;= 0] [Units: vx]</doc>
<def f='TrinityCore3.3.5/dep/recastnavigation/Recast/Source/RecastRasterization.cpp' l='376' type='void rcRasterizeTriangles(rcContext * ctx, const float * verts, const int , const unsigned short * tris, const unsigned char * areas, const int nt, rcHeightfield &amp; solid, const int flagMergeThr = 1)'/>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Recast/Source/RecastRasterization.cpp' l='371'>/// @par
///
/// Spans will only be added for triangles that overlap the heightfield grid.
///
/// @see rcHeightfield</doc>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Recast/Source/RecastRasterization.cpp' l='376'>/*nv*/</doc>
<dec f='TrinityCore6.x/dep/recastnavigation/Recast/Include/Recast.h' l='837' type='void rcRasterizeTriangles(rcContext * ctx, const float * verts, const int nv, const unsigned short * tris, const unsigned char * areas, const int nt, rcHeightfield &amp; solid, const int flagMergeThr = 1)'/>
<doc f='TrinityCore6.x/dep/recastnavigation/Recast/Include/Recast.h' l='826'>/// Rasterizes an indexed triangle mesh into the specified heightfield.
///  @ingroup recast
///  @param[in,out]	ctx			The build context to use during the operation.
///  @param[in]		verts		The vertices. [(x, y, z) * @p nv]
///  @param[in]		nv			The number of vertices.
///  @param[in]		tris		The triangle indices. [(vertA, vertB, vertC) * @p nt]
///  @param[in]		areas		The area id&apos;s of the triangles. [Limit: &lt;= #RC_WALKABLE_AREA] [Size: @p nt]
///  @param[in]		nt			The number of triangles.
///  @param[in,out]	solid		An initialized heightfield.
///  @param[in]		flagMergeThr	The distance where the walkable flag is favored over the non-walkable flag. 
///  							[Limit: &gt;= 0] [Units: vx]</doc>
<def f='TrinityCore6.x/dep/recastnavigation/Recast/Source/RecastRasterization.cpp' l='376' type='void rcRasterizeTriangles(rcContext * ctx, const float * verts, const int , const unsigned short * tris, const unsigned char * areas, const int nt, rcHeightfield &amp; solid, const int flagMergeThr = 1)'/>
<doc f='TrinityCore6.x/dep/recastnavigation/Recast/Source/RecastRasterization.cpp' l='371'>/// @par
///
/// Spans will only be added for triangles that overlap the heightfield grid.
///
/// @see rcHeightfield</doc>
<doc f='TrinityCore6.x/dep/recastnavigation/Recast/Source/RecastRasterization.cpp' l='376'>/*nv*/</doc>
