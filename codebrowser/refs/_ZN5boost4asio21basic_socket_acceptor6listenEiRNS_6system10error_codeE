<def f='include/boost/asio/basic_socket_acceptor.hpp' l='448' type='boost::system::error_code boost::asio::basic_socket_acceptor::listen(int backlog, boost::system::error_code &amp; ec)'/>
<doc f='include/boost/asio/basic_socket_acceptor.hpp' l='428'>/**
   * This function puts the socket acceptor into the state where it may accept
   * new connections.
   *
   * @param backlog The maximum length of the queue of pending connections.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @par Example
   * @code
   * boost::asio::ip::tcp::acceptor acceptor(io_service);
   * ...
   * boost::system::error_code ec;
   * acceptor.listen(boost::asio::socket_base::max_connections, ec);
   * if (ec)
   * {
   *   // An error occurred.
   * }
   * @endcode
   */</doc>
