<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='919' type='static G3D::Vector3 G3D::CollisionDetection::bounceDirection(const class Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const float collisionTime, const G3D::Vector3 &amp; collisionLocation, const G3D::Vector3 &amp; collisionNormal)'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1850' type='static G3D::Vector3 G3D::CollisionDetection::bounceDirection(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const float collisionTime, const G3D::Vector3 &amp; collisionLocation, const G3D::Vector3 &amp; collisionNormal)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='904'>/**
     Finds the direction of bounce that a sphere would have when it 
     intersects an object with the  given time of collision, the 
     collision location and the collision normal.

     @note This function works like a pong style ball bounce.

     @param sphere                Moving sphere.
     @param velocity            Sphere&apos;s velocity.
     @param collisionTime        Time of collision.
     @param collisionLocation    Collision location.
     @param collisionNormal        Surface collision normal.

     @return Direction of bounce.
     */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='919' type='static G3D::Vector3 G3D::CollisionDetection::bounceDirection(const class Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const float collisionTime, const G3D::Vector3 &amp; collisionLocation, const G3D::Vector3 &amp; collisionNormal)'/>
<def f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1850' type='static G3D::Vector3 G3D::CollisionDetection::bounceDirection(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const float collisionTime, const G3D::Vector3 &amp; collisionLocation, const G3D::Vector3 &amp; collisionNormal)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='904'>/**
     Finds the direction of bounce that a sphere would have when it 
     intersects an object with the  given time of collision, the 
     collision location and the collision normal.

     @note This function works like a pong style ball bounce.

     @param sphere                Moving sphere.
     @param velocity            Sphere&apos;s velocity.
     @param collisionTime        Time of collision.
     @param collisionLocation    Collision location.
     @param collisionNormal        Surface collision normal.

     @return Direction of bounce.
     */</doc>
