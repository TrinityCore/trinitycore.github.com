<dec f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.hpp' l='104' type='void zmqpp::socket::connect(const endpoint_t &amp; endpoint)'/>
<doc f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.hpp' l='94'>/*!
	 * Asynchronously connects to an endpoint.
	 * If the endpoint is not inproc then zmq will happily keep trying
	 * to connect until there is something there.
	 *
	 * Inproc sockets must have a valid target already bound before connection
	 * will work.
	 *
	 * \param endpoint the zmq endpoint to connect to
	 */</doc>
<def f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.cpp' l='87' type='void zmqpp::socket::connect(const endpoint_t &amp; endpoint)'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqContext.cpp' l='45' u='c' c='_ZN10ZmqContext22CreateInprocSubscriberEv'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqListener.cpp' l='25' u='c' c='_ZN11ZmqListenerC1ERKSsS1_'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqMux.cpp' l='29' u='c' c='_ZN6ZmqMuxC1ERKSsS1_'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqMux.cpp' l='49' u='c' c='_ZN6ZmqMux4SendEPN5zmqpp7messageEb'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqWorker.cpp' l='37' u='c' c='_ZN9ZmqWorker10HandleOpenEv'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqWorker.cpp' l='38' u='c' c='_ZN9ZmqWorker10HandleOpenEv'/>
