<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Matrix3.h' l='334' type='void G3D::Matrix3::eigenSolveSymmetric(float * afEigenvalue, G3D::Vector3 * akEigenvector) const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Matrix3.h' l='333'>/** eigensolver, matrix must be symmetric */</doc>
<def f='TrinityCore3.3.5/dep/g3dlite/source/Matrix3.cpp' l='1825' type='void G3D::Matrix3::eigenSolveSymmetric(float * afEigenvalue, G3D::Vector3 * akEigenvector) const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/source/Matrix3.cpp' l='1824'>//----------------------------------------------------------------------------</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/Matrix3.h' l='334' type='void G3D::Matrix3::eigenSolveSymmetric(float * afEigenvalue, G3D::Vector3 * akEigenvector) const'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Matrix3.h' l='333'>/** eigensolver, matrix must be symmetric */</doc>
<def f='TrinityCore6.x/dep/g3dlite/source/Matrix3.cpp' l='1825' type='void G3D::Matrix3::eigenSolveSymmetric(float * afEigenvalue, G3D::Vector3 * akEigenvector) const'/>
<doc f='TrinityCore6.x/dep/g3dlite/source/Matrix3.cpp' l='1824'>//----------------------------------------------------------------------------</doc>
