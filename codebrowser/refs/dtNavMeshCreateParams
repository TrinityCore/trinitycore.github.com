<def f='TrinityCore3.3.5/dep/recastnavigation/Detour/Include/DetourNavMeshBuilder.h' l='26'/>
<size>208</size>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Detour/Include/DetourNavMeshBuilder.h' l='24'>/// Represents the source data used to build an navigation mesh tile.
/// @ingroup detour</doc>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Detour/Include/DetourNavMeshBuilder.h' l='130'>/**

@struct dtNavMeshCreateParams
@par

This structure is used to marshal data between the Recast mesh generation pipeline and Detour navigation components.

See the rcPolyMesh and rcPolyMeshDetail documentation for detailed information related to mesh structure.

Units are usually in voxels (vx) or world units (wu). The units for voxels, grid size, and cell size 
are all based on the values of #cs and #ch.

The standard navigation mesh build process is to create tile data using dtCreateNavMeshData, then add the tile 
to a navigation mesh using either the dtNavMesh single tile &lt;tt&gt;init()&lt;/tt&gt; function or the dtNavMesh::addTile()
function.

@see dtCreateNavMeshData

*/</doc>
<def f='TrinityCore6.x/dep/recastnavigation/Detour/Include/DetourNavMeshBuilder.h' l='26'/>
<size>208</size>
<doc f='TrinityCore6.x/dep/recastnavigation/Detour/Include/DetourNavMeshBuilder.h' l='24'>/// Represents the source data used to build an navigation mesh tile.
/// @ingroup detour</doc>
<doc f='TrinityCore6.x/dep/recastnavigation/Detour/Include/DetourNavMeshBuilder.h' l='130'>/**

@struct dtNavMeshCreateParams
@par

This structure is used to marshal data between the Recast mesh generation pipeline and Detour navigation components.

See the rcPolyMesh and rcPolyMeshDetail documentation for detailed information related to mesh structure.

Units are usually in voxels (vx) or world units (wu). The units for voxels, grid size, and cell size 
are all based on the values of #cs and #ch.

The standard navigation mesh build process is to create tile data using dtCreateNavMeshData, then add the tile 
to a navigation mesh using either the dtNavMesh single tile &lt;tt&gt;init()&lt;/tt&gt; function or the dtNavMesh::addTile()
function.

@see dtCreateNavMeshData

*/</doc>
