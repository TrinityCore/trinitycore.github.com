<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/ThreadSet.h' l='53' type='void G3D::ThreadSet::start(G3D::SpawnBehavior lastThreadBehavior = USE_NEW_THREAD) const'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/GThread.h' l='263' u='c' c='_ZN3G3D33_internal_runConcurrently2DHelperERKNS_12Vector2int32ES2_PT_MS3_FviiEMS3_FviiiEi'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/ThreadSet.h' l='44'>/** Start all threads that are not currently started.

        @param lastThreadBehavior If USE_CURRENT_THREAD, takes the
        last unstarted thread and executes it manually on the current
        thread.  This helps to take full advantage of the machine when
        running a large number of jobs and avoids the overhead of a
        thread start for single-thread groups.  Note that this forces
        start() to block until that thread is complete.
      */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/ThreadSet.h' l='53' type='void G3D::ThreadSet::start(G3D::SpawnBehavior lastThreadBehavior = USE_NEW_THREAD) const'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/GThread.h' l='263' u='c' c='_ZN3G3D33_internal_runConcurrently2DHelperERKNS_12Vector2int32ES2_PT_MS3_FviiEMS3_FviiiEi'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/ThreadSet.h' l='44'>/** Start all threads that are not currently started.

        @param lastThreadBehavior If USE_CURRENT_THREAD, takes the
        last unstarted thread and executes it manually on the current
        thread.  This helps to take full advantage of the machine when
        running a large number of jobs and avoids the overhead of a
        thread start for single-thread groups.  Note that this forces
        start() to block until that thread is complete.
      */</doc>
