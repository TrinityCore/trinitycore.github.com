<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Matrix4.h' l='229' type='G3D::Matrix4 G3D::Matrix4::adjoint() const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Matrix4.h' l='222'>/** 
     Transpose of the cofactor matrix (used in computing the inverse).
     Note: This is in fact only one type of adjoint. More generally,
     an adjoint of a matrix is any mapping of a matrix which possesses 
     certain properties.  This returns the so-called adjugate
     or classical adjoint.
    */</doc>
<def f='TrinityCore3.3.5/dep/g3dlite/source/Matrix4.cpp' l='431' type='G3D::Matrix4 G3D::Matrix4::adjoint() const'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Matrix4.cpp' l='439' u='c' c='_ZNK3G3D7Matrix47inverseEv'/>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/Matrix4.h' l='229' type='G3D::Matrix4 G3D::Matrix4::adjoint() const'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Matrix4.h' l='222'>/** 
     Transpose of the cofactor matrix (used in computing the inverse).
     Note: This is in fact only one type of adjoint. More generally,
     an adjoint of a matrix is any mapping of a matrix which possesses 
     certain properties.  This returns the so-called adjugate
     or classical adjoint.
    */</doc>
<def f='TrinityCore6.x/dep/g3dlite/source/Matrix4.cpp' l='431' type='G3D::Matrix4 G3D::Matrix4::adjoint() const'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Matrix4.cpp' l='439' u='c' c='_ZNK3G3D7Matrix47inverseEv'/>
