<def f='include/boost/asio/buffer.hpp' l='212'/>
<ovr f='include/boost/asio/buffer.hpp' l='288' c='boost::asio::const_buffers_1'/>
<size>16</size>
<doc f='include/boost/asio/buffer.hpp' l='194'>/**
 * The const_buffer class provides a safe representation of a buffer that cannot
 * be modified. It does not own the underlying data, and so is cheap to copy or
 * assign.
 *
 * @par Accessing Buffer Contents
 *
 * The contents of a buffer may be accessed using the @ref buffer_size
 * and @ref buffer_cast functions:
 *
 * @code boost::asio::const_buffer b1 = ...;
 * std::size_t s1 = boost::asio::buffer_size(b1);
 * const unsigned char* p1 = boost::asio::buffer_cast&lt;const unsigned char*&gt;(b1);
 * @endcode
 *
 * The boost::asio::buffer_cast function permits violations of type safety, so
 * uses of it in application code should be carefully considered.
 */</doc>
