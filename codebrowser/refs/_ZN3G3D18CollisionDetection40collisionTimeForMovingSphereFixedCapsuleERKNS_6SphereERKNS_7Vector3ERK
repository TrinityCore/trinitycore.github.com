<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='897' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedCapsule(const class Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const class Capsule &amp; capsule, G3D::Vector3 &amp; outLocation, G3D::Vector3 &amp; outNormal = ignore)'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1826' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedCapsule(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const G3D::Capsule &amp; capsule, G3D::Vector3 &amp; location, G3D::Vector3 &amp; outNormal = ignore)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='880'>/**
     Calculates time between the intersection of a moving sphere and a fixed
     capsule.

     @note This won&apos;t detect a collision if the sphere is already
           interpenetrating the capsule.

     @param sphere       Moving sphere.
     @param velocity     Sphere&apos;s velocity.
     @param capsule      Fixed capsule.
     @param outLocation  Location of collision -- not center position of sphere
                         at the collision time. [Post Condition]
     @param outNormal    Capsule&apos;s surface normal to the collision [Post Condition]

     @return Time til collision.  If there is no collision then the return
             value will be inf().
     */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='897' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedCapsule(const class Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const class Capsule &amp; capsule, G3D::Vector3 &amp; outLocation, G3D::Vector3 &amp; outNormal = ignore)'/>
<def f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1826' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedCapsule(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const G3D::Capsule &amp; capsule, G3D::Vector3 &amp; location, G3D::Vector3 &amp; outNormal = ignore)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='880'>/**
     Calculates time between the intersection of a moving sphere and a fixed
     capsule.

     @note This won&apos;t detect a collision if the sphere is already
           interpenetrating the capsule.

     @param sphere       Moving sphere.
     @param velocity     Sphere&apos;s velocity.
     @param capsule      Fixed capsule.
     @param outLocation  Location of collision -- not center position of sphere
                         at the collision time. [Post Condition]
     @param outNormal    Capsule&apos;s surface normal to the collision [Post Condition]

     @return Time til collision.  If there is no collision then the return
             value will be inf().
     */</doc>
