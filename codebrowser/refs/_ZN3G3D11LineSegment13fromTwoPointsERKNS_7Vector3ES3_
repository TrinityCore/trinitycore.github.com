<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/LineSegment.h' l='47' type='static G3D::LineSegment G3D::LineSegment::fromTwoPoints(const Point3 &amp; point1, const Point3 &amp; point2)'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Capsule.cpp' l='87' u='c' c='_ZNK3G3D7Capsule8containsERKNS_7Vector3E'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/LineSegment.h' l='44'>/**
     * Constructs a line from two (not equal) points.
     */</doc>
<use f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1570' u='c' c='_ZN3G3D18CollisionDetection39collisionTimeForMovingPointFixedCapsuleERKNS_7Vector3ES3_RKNS_7CapsuleERS1_S7_'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Cylinder.cpp' l='85' u='c' c='_ZNK3G3D8Cylinder8containsERKNS_7Vector3E'/>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/LineSegment.h' l='47' type='static G3D::LineSegment G3D::LineSegment::fromTwoPoints(const Point3 &amp; point1, const Point3 &amp; point2)'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Capsule.cpp' l='87' u='c' c='_ZNK3G3D7Capsule8containsERKNS_7Vector3E'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/LineSegment.h' l='44'>/**
     * Constructs a line from two (not equal) points.
     */</doc>
<use f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1570' u='c' c='_ZN3G3D18CollisionDetection39collisionTimeForMovingPointFixedCapsuleERKNS_7Vector3ES3_RKNS_7CapsuleERS1_S7_'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Cylinder.cpp' l='85' u='c' c='_ZNK3G3D8Cylinder8containsERKNS_7Vector3E'/>
