<def f='include/boost/asio/basic_deadline_timer.hpp' l='148' type='void boost::asio::basic_deadline_timer::basic_deadline_timer&lt;Time, TimeTraits, TimerService&gt;(boost::asio::io_service &amp; io_service)'/>
<use f='TrinityCore3.3.5/src/server/authserver/Main.cpp' l='171' u='c' c='main'/>
<use f='TrinityCore3.3.5/src/server/authserver/Main.cpp' l='176' u='c' c='main'/>
<doc f='include/boost/asio/basic_deadline_timer.hpp' l='140'>/**
   * This constructor creates a timer without setting an expiry time. The
   * expires_at() or expires_from_now() functions must be called to set an
   * expiry time before the timer can be waited on.
   *
   * @param io_service The io_service object that the timer will use to dispatch
   * handlers for any asynchronous operations performed on the timer.
   */</doc>
<use f='TrinityCore3.3.5/src/server/authserver/Realms/RealmList.cpp' l='37' u='c' c='_ZN9RealmList10InitializeERN5boost4asio10io_serviceEj'/>
<use f='TrinityCore3.3.5/src/server/worldserver/Main.cpp' l='76' u='c'/>
<use f='TrinityCore6.x/src/server/bnetserver/Main.cpp' l='184' u='c' c='main'/>
<use f='TrinityCore6.x/src/server/bnetserver/Main.cpp' l='189' u='c' c='main'/>
<use f='TrinityCore6.x/src/server/bnetserver/Realms/RealmList.cpp' l='42' u='c' c='_ZN9RealmList10InitializeERN5boost4asio10io_serviceEjt'/>
<use f='TrinityCore6.x/src/server/worldserver/Main.cpp' l='78' u='c'/>
