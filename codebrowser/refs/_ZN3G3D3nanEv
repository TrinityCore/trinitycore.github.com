<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/g3dmath.h' l='141' type='double G3D::nan()'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/g3dmath.h' l='139'>/** This value should not be tested against directly, instead
    G3D::isNan() and G3D::isFinite() will return reliable results. */</doc>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Quat.h' l='307' u='c' c='_ZNK3G3D4Quat3logEv'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Quat.h' l='307' u='c' c='_ZNK3G3D4Quat3logEv'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Quat.h' l='307' u='c' c='_ZNK3G3D4Quat3logEv'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Quat.h' l='307' u='c' c='_ZNK3G3D4Quat3logEv'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/TextInput.cpp' l='49' u='c' c='_ZN3G3D9TextInput11parseNumberERKSs'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/g3dmath.cpp' l='77' type='double G3D::nan()'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/source/g3dmath.cpp' l='75'>/** This value should not be tested against directly, instead
    G3D::isNan() and G3D::isFinite() will return reliable results. */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/g3dmath.h' l='141' type='double G3D::nan()'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/g3dmath.h' l='139'>/** This value should not be tested against directly, instead
    G3D::isNan() and G3D::isFinite() will return reliable results. */</doc>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/Quat.h' l='307' u='c' c='_ZNK3G3D4Quat3logEv'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/Quat.h' l='307' u='c' c='_ZNK3G3D4Quat3logEv'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/Quat.h' l='307' u='c' c='_ZNK3G3D4Quat3logEv'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/Quat.h' l='307' u='c' c='_ZNK3G3D4Quat3logEv'/>
<use f='TrinityCore6.x/dep/g3dlite/source/TextInput.cpp' l='49' u='c' c='_ZN3G3D9TextInput11parseNumberERKSs'/>
<def f='TrinityCore6.x/dep/g3dlite/source/g3dmath.cpp' l='77' type='double G3D::nan()'/>
<doc f='TrinityCore6.x/dep/g3dlite/source/g3dmath.cpp' l='75'>/** This value should not be tested against directly, instead
    G3D::isNan() and G3D::isFinite() will return reliable results. */</doc>
