<inh f='TrinityCore3.3.5/src/server/game/Instances/InstanceScript.h' l='167' c='_ZN14InstanceScript16OnCreatureCreateEP8Creature'/>
<def f='TrinityCore3.3.5/src/server/scripts/Kalimdor/OnyxiasLair/instance_onyxias_lair.cpp' l='68' type='void instance_onyxias_lair::instance_onyxias_lair_InstanceMapScript::OnCreatureCreate(Creature * creature)'/>
<doc f='TrinityCore3.3.5/src/server/scripts/Kalimdor/OnyxiasLair/instance_onyxias_lair.cpp' l='65'>//Eruption is a BFS graph problem
        //One map to remember all floor, one map to keep floor that still need to erupt and one queue to know what needs to be removed</doc>
<inh f='TrinityCore6.x/src/server/game/Instances/InstanceScript.h' l='170' c='_ZN14InstanceScript16OnCreatureCreateEP8Creature'/>
<def f='TrinityCore6.x/src/server/scripts/Kalimdor/OnyxiasLair/instance_onyxias_lair.cpp' l='62' type='void instance_onyxias_lair::instance_onyxias_lair_InstanceMapScript::OnCreatureCreate(Creature * creature)'/>
<doc f='TrinityCore6.x/src/server/scripts/Kalimdor/OnyxiasLair/instance_onyxias_lair.cpp' l='59'>//Eruption is a BFS graph problem
        //One map to remember all floor, one map to keep floor that still need to erupt and one queue to know what needs to be removed</doc>
