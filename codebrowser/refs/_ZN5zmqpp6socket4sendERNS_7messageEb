<dec f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.hpp' l='169' type='bool zmqpp::socket::send(message_t &amp; message, const bool dont_block = false)'/>
<doc f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.hpp' l='159'>/*!
	 * Sends the message over the connection, this may be a multipart message.
	 *
	 * If dont_block is true and we are unable to add a new message then this
	 * function will return false.
	 *
	 * \param message message to send
	 * \param dont_block boolean to dictate if we wait while sending.
	 * \return true if message sent, false if it would have blocked
	 */</doc>
<def f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.cpp' l='121' type='bool zmqpp::socket::send(zmqpp::message &amp; message, const bool dont_block = false)'/>
<doc f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.cpp' l='121'>/* = false */</doc>
<use f='TrinityCore6.x/src/server/ipc/ZMQTask.cpp' l='89' u='c' c='_ZN7ZMQTask8PipelineEPN5zmqpp6socketES2_'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqListener.cpp' l='56' u='c' c='_ZN11ZmqListener3RunEv'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqMux.cpp' l='52' u='c' c='_ZN6ZmqMux4SendEPN5zmqpp7messageEb'/>
