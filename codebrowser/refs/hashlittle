<dec f='TrinityCore6.x/dep/CascLib/src/jenkins/lookup.h' l='17' type='uint32_t hashlittle(const void * key, size_t length, uint32_t initval)'/>
<use f='TrinityCore6.x/dep/CascLib/src/CascOpenStorage.cpp' l='138' u='c' c='_ZL20IsCascIndexHeader_V1Phj'/>
<use f='TrinityCore6.x/dep/CascLib/src/CascOpenStorage.cpp' l='381' u='c' c='_ZL27VerifyAndParseKeyMapping_V1P19_CASC_MAPPING_TABLEj'/>
<use f='TrinityCore6.x/dep/CascLib/src/CascOpenStorage.cpp' l='382' u='c' c='_ZL27VerifyAndParseKeyMapping_V1P19_CASC_MAPPING_TABLEj'/>
<use f='TrinityCore6.x/dep/CascLib/src/CascOpenStorage.cpp' l='465' u='c' c='_ZL27VerifyAndParseKeyMapping_V2P19_CASC_MAPPING_TABLEj'/>
<def f='TrinityCore6.x/dep/CascLib/src/jenkins/lookup3.c' l='284' type='uint32_t hashlittle(const void * key, size_t length, uint32_t initval)'/>
<doc f='TrinityCore6.x/dep/CascLib/src/jenkins/lookup3.c' l='257'>/*
-------------------------------------------------------------------------------
hashlittle() -- hash a variable-length key into a 32-bit value
  k       : the key (the unaligned variable-length array of bytes)
  length  : the length of the key, counting by bytes
  initval : can be any 4-byte value
Returns a 32-bit value.  Every bit of the key affects every bit of
the return value.  Two keys differing by one or two bits will have
totally different hash values.

The best hash table sizes are powers of 2.  There is no need to do
mod a prime (mod is sooo slow!).  If you need less than 32 bits,
use a bitmask.  For example, if you need only 10 bits, do
  h = (h &amp; hashmask(10));
In which case, the hash table should have hashsize(10) elements.

If you are hashing n strings (uint8_t **)k, do it like this:
  for (i=0, h=0; i&lt;n; ++i) h = hashlittle( k[i], len[i], h);

By Bob Jenkins, 2006.  bob_jenkins@burtleburtle.net.  You may use this
code any way you wish, private, educational, or commercial.  It&apos;s free.

Use for hash table lookup, or anything where one collision in 2^^32 is
acceptable.  Do NOT use for cryptographic purposes.
-------------------------------------------------------------------------------
*/</doc>
