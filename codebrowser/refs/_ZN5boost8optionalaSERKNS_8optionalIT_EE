<def f='include/boost/optional/optional.hpp' l='586' type='optional&lt;T&gt; &amp; boost::optional::operator=(const optional&lt;U&gt; &amp; rhs)'/>
<def f='include/boost/optional/optional.hpp' l='596' type='optional&lt;T&gt; &amp; boost::optional::operator=(const optional&lt;T&gt; &amp; rhs)'/>
<doc f='include/boost/optional/optional.hpp' l='593'>// Assigns from another optional&lt;T&gt; (deep-copies the rhs value)
    // Basic Guarantee: If T::T( T const&amp; ) throws, this is left UNINITIALIZED
    //  (NOTE: On BCB, this operator is not actually called and left is left UNMODIFIED in case of a throw)</doc>
