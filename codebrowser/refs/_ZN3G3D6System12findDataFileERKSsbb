<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/System.h' l='452' type='static std::string G3D::System::findDataFile(const std::string &amp; full, bool exceptionIfNotFound = true, bool caseSensitive = true)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/System.h' l='418'>/**
     Tries to locate the resource by looking in related directories.
     If found, returns the full path to the resource, otherwise
     returns the empty string.

     Looks in:

         - Literal interpretation of full (i.e., if it contains a fully-qualified name)
         - Last directory in which a file was found
         - Current directory
         - System::appDataDir (which is usually GApp::Settings.dataDir, which defaults to the directory containing the program binary)
         - $G3D9DATA directory
         - System::appDataDir() + &quot;data/&quot;  (note that this may be a zipfile named &quot;data&quot; with no extension)
         - System::appDataDir() + &quot;data.zip/&quot;
         - ../data-files/  (windows)
         - ../../data-files/ (windows)
         - ../../../data-files/ (windows)

       Plus the following subdirectories of those:

         - cubemap
         - gui
         - font
         - icon
         - models
         - image
         - sky
         - md2
         - md3
         - ifs
         - 3ds

        \param exceptionIfNotFound If true and the file is not found, throws G3D::FileNotFound.
     */</doc>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Any.cpp' l='59' u='c' c='_ZNK3G3D3Any23resolveStringAsFilenameEb'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Any.cpp' l='1307' u='c' c='_ZN3G3D3Any11deserializeERNS_9TextInputERNS_5TokenE'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='364' type='static std::string G3D::System::findDataFile(const std::string &amp; _full, bool errorIfNotFound = true, bool caseSensitive = true)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/source/System.cpp' l='363'>//#define MARK_LOG() logPrintf(&quot;%s(%d)\n&quot;, __FILE__, __LINE__)</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/System.h' l='452' type='static std::string G3D::System::findDataFile(const std::string &amp; full, bool exceptionIfNotFound = true, bool caseSensitive = true)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/System.h' l='418'>/**
     Tries to locate the resource by looking in related directories.
     If found, returns the full path to the resource, otherwise
     returns the empty string.

     Looks in:

         - Literal interpretation of full (i.e., if it contains a fully-qualified name)
         - Last directory in which a file was found
         - Current directory
         - System::appDataDir (which is usually GApp::Settings.dataDir, which defaults to the directory containing the program binary)
         - $G3D9DATA directory
         - System::appDataDir() + &quot;data/&quot;  (note that this may be a zipfile named &quot;data&quot; with no extension)
         - System::appDataDir() + &quot;data.zip/&quot;
         - ../data-files/  (windows)
         - ../../data-files/ (windows)
         - ../../../data-files/ (windows)

       Plus the following subdirectories of those:

         - cubemap
         - gui
         - font
         - icon
         - models
         - image
         - sky
         - md2
         - md3
         - ifs
         - 3ds

        \param exceptionIfNotFound If true and the file is not found, throws G3D::FileNotFound.
     */</doc>
<use f='TrinityCore6.x/dep/g3dlite/source/Any.cpp' l='59' u='c' c='_ZNK3G3D3Any23resolveStringAsFilenameEb'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Any.cpp' l='1307' u='c' c='_ZN3G3D3Any11deserializeERNS_9TextInputERNS_5TokenE'/>
<def f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='364' type='static std::string G3D::System::findDataFile(const std::string &amp; _full, bool errorIfNotFound = true, bool caseSensitive = true)'/>
<doc f='TrinityCore6.x/dep/g3dlite/source/System.cpp' l='363'>//#define MARK_LOG() logPrintf(&quot;%s(%d)\n&quot;, __FILE__, __LINE__)</doc>
