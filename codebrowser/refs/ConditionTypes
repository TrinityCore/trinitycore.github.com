<def f='TrinityCore3.3.5/src/server/game/Conditions/ConditionMgr.h' l='31'/>
<def f='TrinityCore6.x/src/server/game/Conditions/ConditionMgr.h' l='49'/>
<doc f='TrinityCore6.x/src/server/game/Conditions/ConditionMgr.h' l='32'>/*! Documentation on implementing a new ConditionType:
    Step 1: Check for the lowest free ID. Look for CONDITION_UNUSED_XX in the enum.
            Then define the new condition type.

    Step 2: Determine and map the parameters for the new condition type.

    Step 3: Add a case block to ConditionMgr::isConditionTypeValid with the new condition type
            and validate the parameters.

    Step 4: Define the maximum available condition targets in ConditionMgr::GetMaxAvailableConditionTargets.

    Step 5: Define the grid searcher mask in Condition::GetSearcherTypeMaskForCondition.

    Step 6: Add a case block to ConditionMgr::Meets with the new condition type.

    Step 7: Define condition name and expected condition values in ConditionMgr::StaticConditionTypeData.
*/</doc>
