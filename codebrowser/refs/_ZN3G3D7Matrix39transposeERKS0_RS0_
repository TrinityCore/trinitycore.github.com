<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Matrix3.h' l='233' type='static void G3D::Matrix3::transpose(const G3D::Matrix3 &amp; A, G3D::Matrix3 &amp; out)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Matrix3.h' l='227'>/** Optimized implementation of out = A.transpose().  It is safe (but slow) to call 
        with A and out possibly pointer equal to one another.
    
        Note that &lt;CODE&gt;A.transpose() * v&lt;/CODE&gt; can be computed 
        more efficiently as &lt;CODE&gt;v * A&lt;/CODE&gt;.
    */</doc>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/Matrix3.h' l='233' type='static void G3D::Matrix3::transpose(const G3D::Matrix3 &amp; A, G3D::Matrix3 &amp; out)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Matrix3.h' l='227'>/** Optimized implementation of out = A.transpose().  It is safe (but slow) to call 
        with A and out possibly pointer equal to one another.
    
        Note that &lt;CODE&gt;A.transpose() * v&lt;/CODE&gt; can be computed 
        more efficiently as &lt;CODE&gt;v * A&lt;/CODE&gt;.
    */</doc>
