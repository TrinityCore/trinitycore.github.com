<dec f='TrinityCore6.x/src/server/game/Pools/PoolMgr.h' l='145' type='void PoolMgr::SpawnPool(uint32 pool_id, uint64 db_guid_or_pool_id)'/>
<def f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1015' type='void PoolMgr::SpawnPool(uint32 pool_id, uint64 db_guid)'/>
<def f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1024' type='void PoolMgr::SpawnPool(uint32 pool_id, uint64 db_guid)'/>
<def f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1033' type='void PoolMgr::SpawnPool(uint32 pool_id, uint64 sub_pool_id)'/>
<def f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1041' type='void PoolMgr::SpawnPool(uint32 pool_id, uint64 quest_id)'/>
<use f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1049' u='c' c='_ZN7PoolMgr9SpawnPoolEj'/>
<use f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1050' u='c' c='_ZN7PoolMgr9SpawnPoolEj'/>
<use f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1051' u='c' c='_ZN7PoolMgr9SpawnPoolEj'/>
<use f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1052' u='c' c='_ZN7PoolMgr9SpawnPoolEj'/>
<use f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1088' u='c' c='_ZN7PoolMgr10UpdatePoolEjm'/>
<doc f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1012'>// Call to spawn a pool, if cache if true the method will spawn only if cached entry is different
// If it&apos;s same, the creature is respawned only (added back to map)</doc>
<doc f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1021'>// Call to spawn a pool, if cache if true the method will spawn only if cached entry is different
// If it&apos;s same, the gameobject is respawned only (added back to map)</doc>
<doc f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1030'>// Call to spawn a pool, if cache if true the method will spawn only if cached entry is different
// If it&apos;s same, the pool is respawned only</doc>
<doc f='TrinityCore6.x/src/server/game/Pools/PoolMgr.cpp' l='1039'>// Call to spawn a pool</doc>
