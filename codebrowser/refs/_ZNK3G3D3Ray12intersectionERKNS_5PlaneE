<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Ray.h' l='129' type='Point3 G3D::Ray::intersection(const class Plane &amp; plane) const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Ray.h' l='122'>/**
     Returns the point where the Ray and plane intersect.  If there
     is no intersection, returns a point at infinity.

      Planes are considered one-sided, so the ray will not intersect
      a plane where the normal faces in the traveling direction.
    */</doc>
<def f='TrinityCore3.3.5/dep/g3dlite/source/Ray.cpp' l='164' type='G3D::Vector3 G3D::Ray::intersection(const G3D::Plane &amp; plane) const'/>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/Ray.h' l='129' type='Point3 G3D::Ray::intersection(const class Plane &amp; plane) const'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Ray.h' l='122'>/**
     Returns the point where the Ray and plane intersect.  If there
     is no intersection, returns a point at infinity.

      Planes are considered one-sided, so the ray will not intersect
      a plane where the normal faces in the traveling direction.
    */</doc>
<def f='TrinityCore6.x/dep/g3dlite/source/Ray.cpp' l='164' type='G3D::Vector3 G3D::Ray::intersection(const G3D::Plane &amp; plane) const'/>
