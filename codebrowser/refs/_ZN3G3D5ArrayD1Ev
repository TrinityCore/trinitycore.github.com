<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Array.h' l='389' type='void G3D::Array::~Array&lt;T, MIN_ELEMENTS&gt;()'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Array.h' l='382'>/**
    Destructor does not delete() the objects if T is a pointer type
    (e.g. T = int*) instead, it deletes the &lt;B&gt;pointers themselves&lt;/B&gt; and 
    leaves the objects.  Call deleteAll if you want to dealocate
    the objects referenced.  Do not call deleteAll if &lt;CODE&gt;T&lt;/CODE&gt; is not a pointer
    type (e.g. do call Array&lt;Foo*&gt;::deleteAll, do &lt;B&gt;not&lt;/B&gt; call Array&lt;Foo&gt;::deleteAll).
    */</doc>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Any.cpp' l='294' u='c' c='_ZN3G3D3Any4DataD1Ev'/>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/Array.h' l='389' type='void G3D::Array::~Array&lt;T, MIN_ELEMENTS&gt;()'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Array.h' l='382'>/**
    Destructor does not delete() the objects if T is a pointer type
    (e.g. T = int*) instead, it deletes the &lt;B&gt;pointers themselves&lt;/B&gt; and 
    leaves the objects.  Call deleteAll if you want to dealocate
    the objects referenced.  Do not call deleteAll if &lt;CODE&gt;T&lt;/CODE&gt; is not a pointer
    type (e.g. do call Array&lt;Foo*&gt;::deleteAll, do &lt;B&gt;not&lt;/B&gt; call Array&lt;Foo&gt;::deleteAll).
    */</doc>
<use f='TrinityCore6.x/dep/g3dlite/source/Any.cpp' l='294' u='c' c='_ZN3G3D3Any4DataD1Ev'/>
