<def f='include/boost/asio/basic_socket_acceptor.hpp' l='492' type='boost::system::error_code boost::asio::basic_socket_acceptor::close(boost::system::error_code &amp; ec)'/>
<use f='TrinityCore3.3.5/src/server/shared/Networking/AsyncAcceptor.h' l='74' u='c' c='_ZN13AsyncAcceptor5CloseEv'/>
<doc f='include/boost/asio/basic_socket_acceptor.hpp' l='471'>/**
   * This function is used to close the acceptor. Any asynchronous accept
   * operations will be cancelled immediately.
   *
   * A subsequent call to open() is required before the acceptor can again be
   * used to again perform socket accept operations.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @par Example
   * @code
   * boost::asio::ip::tcp::acceptor acceptor(io_service);
   * ...
   * boost::system::error_code ec;
   * acceptor.close(ec);
   * if (ec)
   * {
   *   // An error occurred.
   * }
   * @endcode
   */</doc>
<use f='TrinityCore6.x/src/server/shared/Networking/AsyncAcceptor.h' l='74' u='c' c='_ZN13AsyncAcceptor5CloseEv'/>
