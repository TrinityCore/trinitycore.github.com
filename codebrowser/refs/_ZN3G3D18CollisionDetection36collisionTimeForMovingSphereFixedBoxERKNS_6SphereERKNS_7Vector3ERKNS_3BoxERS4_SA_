<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='849' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedBox(const class Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const class Box &amp; box, G3D::Vector3 &amp; outLocation, G3D::Vector3 &amp; outNormal = ignore)'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1790' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedBox(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const G3D::Box &amp; box, G3D::Vector3 &amp; location, G3D::Vector3 &amp; outNormal = ignore)'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='2221' u='c' c='_ZN3G3D18CollisionDetection33movingSpherePassesThroughFixedBoxERKNS_6SphereERKNS_7Vector3ERKNS_3BoxEd'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='832'>/**
     Calculates time between the intersection of a moving sphere and a fixed
     box.

     @note This function will not detect an intersection between a moving object
     that is already interpenetrating the fixed object.

     @param sphere       Moving sphere.
     @param velocity     Sphere&apos;s velocity.
     @param box          Fixed box.
     @param outLocation  Location of collision -- not center position of sphere
                         at the collision time. [Post Condition]
     @param outNormal    Box&apos;s surface normal to collision [Post Condition]

     @return Time til collision.  If there is no collision then the return
             value will be inf().
     */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='849' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedBox(const class Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const class Box &amp; box, G3D::Vector3 &amp; outLocation, G3D::Vector3 &amp; outNormal = ignore)'/>
<def f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1790' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedBox(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const G3D::Box &amp; box, G3D::Vector3 &amp; location, G3D::Vector3 &amp; outNormal = ignore)'/>
<use f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='2221' u='c' c='_ZN3G3D18CollisionDetection33movingSpherePassesThroughFixedBoxERKNS_6SphereERKNS_7Vector3ERKNS_3BoxEd'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='832'>/**
     Calculates time between the intersection of a moving sphere and a fixed
     box.

     @note This function will not detect an intersection between a moving object
     that is already interpenetrating the fixed object.

     @param sphere       Moving sphere.
     @param velocity     Sphere&apos;s velocity.
     @param box          Fixed box.
     @param outLocation  Location of collision -- not center position of sphere
                         at the collision time. [Post Condition]
     @param outNormal    Box&apos;s surface normal to collision [Post Condition]

     @return Time til collision.  If there is no collision then the return
             value will be inf().
     */</doc>
