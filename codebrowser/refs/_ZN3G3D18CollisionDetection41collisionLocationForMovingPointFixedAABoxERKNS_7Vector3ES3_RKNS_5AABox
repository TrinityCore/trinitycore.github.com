<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='634' type='static bool G3D::CollisionDetection::collisionLocationForMovingPointFixedAABox(const G3D::Vector3 &amp; point, const G3D::Vector3 &amp; velocity, const class AABox &amp; box, G3D::Vector3 &amp; outLocation, bool &amp; inside = ignoreBool, G3D::Vector3 &amp; normal = ignore)'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1218' u='c' c='_ZN3G3D18CollisionDetection37collisionTimeForMovingPointFixedAABoxERKNS_7Vector3ES3_RKNS_5AABoxERS1_RbS7_'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1226' type='static bool G3D::CollisionDetection::collisionLocationForMovingPointFixedAABox(const G3D::Vector3 &amp; origin, const G3D::Vector3 &amp; dir, const G3D::AABox &amp; box, G3D::Vector3 &amp; location, bool &amp; Inside = ignoreBool, G3D::Vector3 &amp; normal = ignore)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='618'>/**
     Calculates time between the intersection of a moving point and a fixed
     Axis-Aligned Box (AABox).

     @note Avoids the sqrt from collisionTimeForMovingPointFixedAABox.

     @param point        Moving point.
     @param velocity     Sphere&apos;s velocity.
     @param box          Fixed AAbox.
     @param outLocation  Location of collision. [Post Condition]
     @param inside       Does the ray originate inside the box? [Post Condition]
     @param normal       Box&apos;s surface normal to collision [Post Condition]

     @return Time til collision.  If there is no collision then the return
             value will be inf().
     */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='634' type='static bool G3D::CollisionDetection::collisionLocationForMovingPointFixedAABox(const G3D::Vector3 &amp; point, const G3D::Vector3 &amp; velocity, const class AABox &amp; box, G3D::Vector3 &amp; outLocation, bool &amp; inside = ignoreBool, G3D::Vector3 &amp; normal = ignore)'/>
<use f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1218' u='c' c='_ZN3G3D18CollisionDetection37collisionTimeForMovingPointFixedAABoxERKNS_7Vector3ES3_RKNS_5AABoxERS1_RbS7_'/>
<def f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1226' type='static bool G3D::CollisionDetection::collisionLocationForMovingPointFixedAABox(const G3D::Vector3 &amp; origin, const G3D::Vector3 &amp; dir, const G3D::AABox &amp; box, G3D::Vector3 &amp; location, bool &amp; Inside = ignoreBool, G3D::Vector3 &amp; normal = ignore)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='618'>/**
     Calculates time between the intersection of a moving point and a fixed
     Axis-Aligned Box (AABox).

     @note Avoids the sqrt from collisionTimeForMovingPointFixedAABox.

     @param point        Moving point.
     @param velocity     Sphere&apos;s velocity.
     @param box          Fixed AAbox.
     @param outLocation  Location of collision. [Post Condition]
     @param inside       Does the ray originate inside the box? [Post Condition]
     @param normal       Box&apos;s surface normal to collision [Post Condition]

     @return Time til collision.  If there is no collision then the return
             value will be inf().
     */</doc>
