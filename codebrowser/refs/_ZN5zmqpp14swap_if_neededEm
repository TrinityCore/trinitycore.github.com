<def f='TrinityCore6.x/dep/zmqpp/zmqpp/inet.hpp' l='49' type='uint64_t zmqpp::swap_if_needed(const uint64_t value_to_check)'/>
<use f='TrinityCore6.x/dep/zmqpp/zmqpp/inet.hpp' l='82' u='c' c='_ZN5zmqpp6htonllEm'/>
<use f='TrinityCore6.x/dep/zmqpp/zmqpp/inet.hpp' l='97' u='c' c='_ZN5zmqpp6ntohllEm'/>
<doc f='TrinityCore6.x/dep/zmqpp/zmqpp/inet.hpp' l='35'>/*!
 * Common code for the 64bit versions of htons/htons and ntohs/ntohl
 *
 * As htons and ntohs (or htonl and ntohs) always just do the same thing, ie
 * swap bytes if the host order differs from network order or otherwise don&apos;t
 * do anything, it seemed silly to type the code twice.
 *
 * \note This code assumes network order is always big endian. Which it is.
 * \note The host endian is only checked once and afterwards assumed to remain
 *       the same.
 *
 * \param value_to_check unsigned 64 bit integer to swap
 * \return swapped (or not) unsigned 64 bit integer
 */</doc>
