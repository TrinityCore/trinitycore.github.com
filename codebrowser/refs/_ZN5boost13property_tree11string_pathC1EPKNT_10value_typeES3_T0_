<dec f='include/boost/property_tree/string_path.hpp' l='108' type='void boost::property_tree::string_path::string_path&lt;String, Translator&gt;(const char_type * value, char_type separator = char_type(&apos;.&apos;), Translator tr = Translator())'/>
<def f='include/boost/property_tree/string_path.hpp' l='178' type='void boost::property_tree::string_path::string_path&lt;String, Translator&gt;(const char_type * value, char_type separator = char_type(&apos;.&apos;), Translator tr = Translator())'/>
<doc f='include/boost/property_tree/string_path.hpp' l='100'>/// Create a path by parsing the given string.
        /// @param value A zero-terminated array of values. Only use if zero-
        ///              termination makes sense for your type, and your
        ///              sequence supports construction from it. Intended for
        ///              string literals.
        /// @param separator The separator used in parsing. Defaults to &apos;.&apos;.
        /// @param tr The translator used by this path to convert the individual
        ///           parts to keys.</doc>
