<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/FileSystem.h' l='46'/>
<size>96</size>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/FileSystem.h' l='20'>/** 
 OS-independent file system layer that optimizes the performance
 of queries by caching and prefetching.

 This class uses the following definitions:
 &lt;ul&gt;
   &lt;li&gt; &quot;file&quot; = document that can be opened for reading or writing
   &lt;li&gt; &quot;directory&quot; = folder containing files and other directories
   &lt;li&gt; &quot;node&quot; = file or directory
   &lt;li&gt; &quot;path&quot; = string identifying a (see the FSPath class)
   &lt;li&gt; &quot;zipfile&quot; = a compressed file storing an archive of files and directories in the zip format
 &lt;/ul&gt;

 In G3D, Zipfiles are transparently treated as if they were directories, provided:
 &lt;ul&gt;
   &lt;li&gt; The zipfile name contains an extension (e.g., map.pk3, files.zip)
   &lt;li&gt; There are no nested zipfiles
 &lt;/ul&gt;

 All FileSystem routines invoke FilePath::expandEnvironmentVariables if the input contains a &apos;$&apos;.

 The extension requirement allows G3D to quickly identify whether a path could enter a
 zipfile without forcing it to open all parent directories for reading.

 \sa FilePath
*/</doc>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/FileSystem.h' l='46'/>
<size>96</size>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/FileSystem.h' l='20'>/** 
 OS-independent file system layer that optimizes the performance
 of queries by caching and prefetching.

 This class uses the following definitions:
 &lt;ul&gt;
   &lt;li&gt; &quot;file&quot; = document that can be opened for reading or writing
   &lt;li&gt; &quot;directory&quot; = folder containing files and other directories
   &lt;li&gt; &quot;node&quot; = file or directory
   &lt;li&gt; &quot;path&quot; = string identifying a (see the FSPath class)
   &lt;li&gt; &quot;zipfile&quot; = a compressed file storing an archive of files and directories in the zip format
 &lt;/ul&gt;

 In G3D, Zipfiles are transparently treated as if they were directories, provided:
 &lt;ul&gt;
   &lt;li&gt; The zipfile name contains an extension (e.g., map.pk3, files.zip)
   &lt;li&gt; There are no nested zipfiles
 &lt;/ul&gt;

 All FileSystem routines invoke FilePath::expandEnvironmentVariables if the input contains a &apos;$&apos;.

 The extension requirement allows G3D to quickly identify whether a path could enter a
 zipfile without forcing it to open all parent directories for reading.

 \sa FilePath
*/</doc>
