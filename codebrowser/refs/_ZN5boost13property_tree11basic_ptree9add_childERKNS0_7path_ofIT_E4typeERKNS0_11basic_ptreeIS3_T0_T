<dec f='include/boost/property_tree/ptree.hpp' l='298' type='self_type &amp; boost::property_tree::basic_ptree::add_child(const path_type &amp; path, const self_type &amp; value)'/>
<def f='include/boost/property_tree/detail/ptree_implementation.hpp' l='633' type='basic_ptree&lt;K, D, C&gt; &amp; boost::property_tree::basic_ptree::add_child(const path_type &amp; path, const self_type &amp; value)'/>
<use f='include/boost/property_tree/detail/ptree_implementation.hpp' l='849' u='c' c='_ZN5boost13property_tree11basic_ptree3addERKNS0_7path_ofIT_E4typeERKT_T0_'/>
<doc f='include/boost/property_tree/ptree.hpp' l='290'>/** Add the node at the given path. Create any missing parents. If there
         * already is a node at the path, add another one with the same key.
         * @param path Path to the child. The last fragment must not have an
         *             index.
         * @return A reference to the inserted subtree.
         * @note Because of the way paths work, it is not generally guaranteed
         *       that a node newly created can be accessed using the same path.
         */</doc>
