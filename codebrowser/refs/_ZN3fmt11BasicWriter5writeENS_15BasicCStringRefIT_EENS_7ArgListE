<def f='TrinityCore3.3.5/dep/cppformat/format.h' l='2340' type='void fmt::BasicWriter::write(BasicCStringRef&lt;Char&gt; format, fmt::ArgList args)'/>
<use f='TrinityCore3.3.5/dep/cppformat/format.h' l='3002' u='c' c='_ZN3fmt6formatENS_15BasicCStringRefIcEENS_7ArgListE'/>
<use f='TrinityCore3.3.5/dep/cppformat/format.h' l='3008' u='c' c='_ZN3fmt6formatENS_15BasicCStringRefIwEENS_7ArgListE'/>
<use f='TrinityCore3.3.5/dep/cppformat/format.cc' l='856' u='c' c='_ZN3fmt5printEP8_IO_FILENS_15BasicCStringRefIcEENS_7ArgListE'/>
<use f='TrinityCore3.3.5/dep/cppformat/format.cc' l='866' u='c' c='_ZN3fmt5printERSoNS_15BasicCStringRefIcEENS_7ArgListE'/>
<doc f='TrinityCore3.3.5/dep/cppformat/format.h' l='2315'>/**
    \rst
    Writes formatted data.

    *args* is an argument list representing arbitrary arguments.

    **Example**::

       MemoryWriter out;
       out.write(&quot;Current point:\n&quot;);
       out.write(&quot;({:+f}, {:+f})&quot;, -3.14, 3.14);

    This will write the following output to the ``out`` object:

    .. code-block:: none

       Current point:
       (-3.140000, +3.140000)

    The output can be accessed using :func:`data()`, :func:`c_str` or
    :func:`str` methods.

    See also :ref:`syntax`.
    \endrst
   */</doc>
<def f='TrinityCore6.x/dep/cppformat/format.h' l='2340' type='void fmt::BasicWriter::write(BasicCStringRef&lt;Char&gt; format, fmt::ArgList args)'/>
<use f='TrinityCore6.x/dep/cppformat/format.h' l='3002' u='c' c='_ZN3fmt6formatENS_15BasicCStringRefIcEENS_7ArgListE'/>
<use f='TrinityCore6.x/dep/cppformat/format.h' l='3008' u='c' c='_ZN3fmt6formatENS_15BasicCStringRefIwEENS_7ArgListE'/>
<use f='TrinityCore6.x/dep/cppformat/format.cc' l='856' u='c' c='_ZN3fmt5printEP8_IO_FILENS_15BasicCStringRefIcEENS_7ArgListE'/>
<use f='TrinityCore6.x/dep/cppformat/format.cc' l='866' u='c' c='_ZN3fmt5printERSoNS_15BasicCStringRefIcEENS_7ArgListE'/>
<doc f='TrinityCore6.x/dep/cppformat/format.h' l='2315'>/**
    \rst
    Writes formatted data.

    *args* is an argument list representing arbitrary arguments.

    **Example**::

       MemoryWriter out;
       out.write(&quot;Current point:\n&quot;);
       out.write(&quot;({:+f}, {:+f})&quot;, -3.14, 3.14);

    This will write the following output to the ``out`` object:

    .. code-block:: none

       Current point:
       (-3.140000, +3.140000)

    The output can be accessed using :func:`data()`, :func:`c_str` or
    :func:`str` methods.

    See also :ref:`syntax`.
    \endrst
   */</doc>
