<dec f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.hpp' l='181' type='bool zmqpp::socket::receive(message_t &amp; message, const bool dont_block = false)'/>
<doc f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.hpp' l='171'>/*!
	 * Gets a message from the connection, this may be a multipart message.
	 *
	 * If dont_block is true and we are unable to get a message then this
	 * function will return false.
	 *
	 * \param message reference to fill with received data
	 * \param dont_block boolean to dictate if we wait for data.
	 * \return true if message sent, false if it would have blocked
	 */</doc>
<def f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.cpp' l='182' type='bool zmqpp::socket::receive(zmqpp::message &amp; message, const bool dont_block = false)'/>
<doc f='TrinityCore6.x/dep/zmqpp/zmqpp/socket.cpp' l='182'>/* = false */</doc>
<use f='TrinityCore6.x/src/server/bnetserver/Realms/WorldListener.cpp' l='56' u='c' c='_ZN13WorldListener3RunEv'/>
<use f='TrinityCore6.x/src/server/ipc/ZMQTask.cpp' l='60' u='c' c='_ZN7ZMQTask11ProcessExitEv'/>
<use f='TrinityCore6.x/src/server/ipc/ZMQTask.cpp' l='86' u='c' c='_ZN7ZMQTask8PipelineEPN5zmqpp6socketES2_'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqListener.cpp' l='55' u='c' c='_ZN11ZmqListener3RunEv'/>
<use f='TrinityCore6.x/src/server/ipc/ZmqWorker.cpp' l='65' u='c' c='_ZN9ZmqWorker11PerformWorkEv'/>
