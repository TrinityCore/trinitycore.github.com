<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Line.h' l='52' type='static G3D::Line G3D::Line::fromTwoPoints(const G3D::Vector3 &amp; point1, const G3D::Vector3 &amp; point2)'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Capsule.cpp' l='53' u='c' c='_ZNK3G3D7Capsule4axisEv'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Line.h' l='49'>/**
      Constructs a line from two (not equal) points.
     */</doc>
<use f='TrinityCore3.3.5/dep/g3dlite/source/Cylinder.cpp' l='53' u='c' c='_ZNK3G3D8Cylinder4axisEv'/>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/Line.h' l='52' type='static G3D::Line G3D::Line::fromTwoPoints(const G3D::Vector3 &amp; point1, const G3D::Vector3 &amp; point2)'/>
<use f='TrinityCore6.x/dep/g3dlite/source/Capsule.cpp' l='53' u='c' c='_ZNK3G3D7Capsule4axisEv'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Line.h' l='49'>/**
      Constructs a line from two (not equal) points.
     */</doc>
<use f='TrinityCore6.x/dep/g3dlite/source/Cylinder.cpp' l='53' u='c' c='_ZNK3G3D8Cylinder4axisEv'/>
