<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='225' type='static void G3D::CollisionDetection::fillSolidBoxSolidBoxInfo(const G3D::Box &amp; box1, const G3D::Box &amp; box2, G3D::Vector3 &amp; a, G3D::Vector3 &amp; b, G3D::Vector3 &amp; D, double * c, double * ca, double * ad, double * bd)'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='202' type='static void G3D::CollisionDetection::fillSolidBoxSolidBoxInfo(const G3D::Box &amp; box1, const G3D::Box &amp; box2, G3D::Vector3 &amp; a, G3D::Vector3 &amp; b, G3D::Vector3 &amp; D, double * c, double * ca, double * ad, double * bd)'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='265' u='c' c='_ZN3G3D18CollisionDetection36fixedSolidBoxIntersectsFixedSolidBoxERKNS_3BoxES3_i'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='368' u='c' c='_ZN3G3D18CollisionDetection35penetrationDepthForFixedBoxFixedBoxERKNS_3BoxES3_RNS_5ArrayINS_7Vector3ELm10EEES7_i'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='190'>/**
      Creates a set of standard information about two boxes in order to
      solve for their collision.  This information includes a vector to
      the radius of the bounding sphere for each box, the vector between
      each boxes&apos; center and a series of dot products between differing
      important vectors.  These dot products include those between the axes
      of both boxes (signed and unsigned values), and the dot products
      between all the axes of box1 and the boxes&apos; center vector and box2
      and the boxes&apos; center vector.

      @pre The following space requirements must be met:
              - c[]  9 elements
              - ca[] 9 elements
              - ad[] 3 elements
              - bd[] 3 elements

      @cite dobted from David Eberly&apos;s papers, variables used in this function
      correspond to variables used in pages 6 and 7 in the pdf
      http://www.magic-software.com/Intersection.html
      http://www.magic-software.com/Documentation/DynamicCollisionDetection.pdf

      @note Links are out-dated. (Kept to preserve origin and authorship)

      @param box1 Box 1
      @param box2 Box 2
      @param a Box 1&apos;s bounding sphere vector
      @param b Box 2&apos;s bounding sphere vector
      @param D Vector between Box 1 and Box 2&apos;s center points
      @param c Pointer to array of dot products of the axes of Box 1
               and Box 2.
      @param ca Pointer to array of unsigned dot products of the axes
                of Box 1 and Box 2.
      @param ad Pointer to array of dot products of Box 1 axes and D.
      @param bd Pointer to array of dot products of Box 2 axes and D.
     */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='225' type='static void G3D::CollisionDetection::fillSolidBoxSolidBoxInfo(const G3D::Box &amp; box1, const G3D::Box &amp; box2, G3D::Vector3 &amp; a, G3D::Vector3 &amp; b, G3D::Vector3 &amp; D, double * c, double * ca, double * ad, double * bd)'/>
<def f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='202' type='static void G3D::CollisionDetection::fillSolidBoxSolidBoxInfo(const G3D::Box &amp; box1, const G3D::Box &amp; box2, G3D::Vector3 &amp; a, G3D::Vector3 &amp; b, G3D::Vector3 &amp; D, double * c, double * ca, double * ad, double * bd)'/>
<use f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='265' u='c' c='_ZN3G3D18CollisionDetection36fixedSolidBoxIntersectsFixedSolidBoxERKNS_3BoxES3_i'/>
<use f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='368' u='c' c='_ZN3G3D18CollisionDetection35penetrationDepthForFixedBoxFixedBoxERKNS_3BoxES3_RNS_5ArrayINS_7Vector3ELm10EEES7_i'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='190'>/**
      Creates a set of standard information about two boxes in order to
      solve for their collision.  This information includes a vector to
      the radius of the bounding sphere for each box, the vector between
      each boxes&apos; center and a series of dot products between differing
      important vectors.  These dot products include those between the axes
      of both boxes (signed and unsigned values), and the dot products
      between all the axes of box1 and the boxes&apos; center vector and box2
      and the boxes&apos; center vector.

      @pre The following space requirements must be met:
              - c[]  9 elements
              - ca[] 9 elements
              - ad[] 3 elements
              - bd[] 3 elements

      @cite dobted from David Eberly&apos;s papers, variables used in this function
      correspond to variables used in pages 6 and 7 in the pdf
      http://www.magic-software.com/Intersection.html
      http://www.magic-software.com/Documentation/DynamicCollisionDetection.pdf

      @note Links are out-dated. (Kept to preserve origin and authorship)

      @param box1 Box 1
      @param box2 Box 2
      @param a Box 1&apos;s bounding sphere vector
      @param b Box 2&apos;s bounding sphere vector
      @param D Vector between Box 1 and Box 2&apos;s center points
      @param c Pointer to array of dot products of the axes of Box 1
               and Box 2.
      @param ca Pointer to array of unsigned dot products of the axes
                of Box 1 and Box 2.
      @param ad Pointer to array of dot products of Box 1 axes and D.
      @param bd Pointer to array of dot products of Box 2 axes and D.
     */</doc>
