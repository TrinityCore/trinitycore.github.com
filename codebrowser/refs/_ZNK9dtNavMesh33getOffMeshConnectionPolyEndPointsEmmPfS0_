<dec f='TrinityCore3.3.5/dep/recastnavigation/Detour/Include/DetourNavMesh.h' l='447' type='dtStatus dtNavMesh::getOffMeshConnectionPolyEndPoints(dtPolyRef prevRef, dtPolyRef polyRef, float * startPos, float * endPos) const'/>
<def f='TrinityCore3.3.5/dep/recastnavigation/Detour/Source/DetourNavMesh.cpp' l='1372' type='dtStatus dtNavMesh::getOffMeshConnectionPolyEndPoints(dtPolyRef prevRef, dtPolyRef polyRef, float * startPos, float * endPos) const'/>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Detour/Source/DetourNavMesh.cpp' l='1365'>/// @par
///
/// Off-mesh connections are stored in the navigation mesh as special 2-vertex 
/// polygons with a single edge. At least one of the vertices is expected to be 
/// inside a normal polygon. So an off-mesh connection is &quot;entered&quot; from a 
/// normal polygon at one of its endpoints. This is the polygon identified by 
/// the prevRef parameter.</doc>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Detour/Include/DetourNavMesh.h' l='441'>/// Gets the endpoints for an off-mesh connection, ordered by &quot;direction of travel&quot;.
	///  @param[in]		prevRef		The reference of the polygon before the connection.
	///  @param[in]		polyRef		The reference of the off-mesh connection polygon.
	///  @param[out]	startPos	The start position of the off-mesh connection. [(x, y, z)]
	///  @param[out]	endPos		The end position of the off-mesh connection. [(x, y, z)]
	/// @return The status flags for the operation.</doc>
<use f='TrinityCore3.3.5/src/server/game/Movement/PathGenerator.cpp' l='857' u='c' c='_ZN13PathGenerator14FindSmoothPathEPKfS1_PKmjPfPij'/>
<dec f='TrinityCore6.x/dep/recastnavigation/Detour/Include/DetourNavMesh.h' l='447' type='dtStatus dtNavMesh::getOffMeshConnectionPolyEndPoints(dtPolyRef prevRef, dtPolyRef polyRef, float * startPos, float * endPos) const'/>
<def f='TrinityCore6.x/dep/recastnavigation/Detour/Source/DetourNavMesh.cpp' l='1372' type='dtStatus dtNavMesh::getOffMeshConnectionPolyEndPoints(dtPolyRef prevRef, dtPolyRef polyRef, float * startPos, float * endPos) const'/>
<doc f='TrinityCore6.x/dep/recastnavigation/Detour/Source/DetourNavMesh.cpp' l='1365'>/// @par
///
/// Off-mesh connections are stored in the navigation mesh as special 2-vertex 
/// polygons with a single edge. At least one of the vertices is expected to be 
/// inside a normal polygon. So an off-mesh connection is &quot;entered&quot; from a 
/// normal polygon at one of its endpoints. This is the polygon identified by 
/// the prevRef parameter.</doc>
<doc f='TrinityCore6.x/dep/recastnavigation/Detour/Include/DetourNavMesh.h' l='441'>/// Gets the endpoints for an off-mesh connection, ordered by &quot;direction of travel&quot;.
	///  @param[in]		prevRef		The reference of the polygon before the connection.
	///  @param[in]		polyRef		The reference of the off-mesh connection polygon.
	///  @param[out]	startPos	The start position of the off-mesh connection. [(x, y, z)]
	///  @param[out]	endPos		The end position of the off-mesh connection. [(x, y, z)]
	/// @return The status flags for the operation.</doc>
<use f='TrinityCore6.x/src/server/game/Movement/PathGenerator.cpp' l='858' u='c' c='_ZN13PathGenerator14FindSmoothPathEPKfS1_PKmjPfPij'/>
