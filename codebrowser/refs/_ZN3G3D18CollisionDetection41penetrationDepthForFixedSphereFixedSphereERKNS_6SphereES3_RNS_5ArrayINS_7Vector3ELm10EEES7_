<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='361' type='static float G3D::CollisionDetection::penetrationDepthForFixedSphereFixedSphere(const class Sphere &amp; sphereA, const G3D::Sphere &amp; sphereB, Array&lt;G3D::Vector3&gt; &amp; contactPoints, Array&lt;G3D::Vector3&gt; &amp; contactNormals = ignoreArray)'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='764' type='static float G3D::CollisionDetection::penetrationDepthForFixedSphereFixedSphere(const G3D::Sphere &amp; sphereA, const G3D::Sphere &amp; sphereB, Array&lt;G3D::Vector3&gt; &amp; contactPoints, Array&lt;G3D::Vector3&gt; &amp; contactNormals = ignoreArray)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='345'>/**
      Calculates the depth of penetration between two fixed spheres as well
      as the deepest point of Sphere A that penetrates Sphere B. The normal
      returned points &lt;B&gt;away&lt;/B&gt; from the object A, although it may
      represent a perpendicular to either the faces of object B or object A
      depending on their relative orientations.

      @param sphereA        Fixed Sphere A.
      @param sphereB        Fixed Sphere B.
      @param contactPoints    Sphere A&apos;s deepest point that penetrates Sphere B.
                             [Post Condition]
      @param contactNormals    Normal at penetration point. [Post Condition]

      @return Depth of penetration.  If there is no intersection between the
              objects then the depth will be a negative value.
     */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='361' type='static float G3D::CollisionDetection::penetrationDepthForFixedSphereFixedSphere(const class Sphere &amp; sphereA, const G3D::Sphere &amp; sphereB, Array&lt;G3D::Vector3&gt; &amp; contactPoints, Array&lt;G3D::Vector3&gt; &amp; contactNormals = ignoreArray)'/>
<def f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='764' type='static float G3D::CollisionDetection::penetrationDepthForFixedSphereFixedSphere(const G3D::Sphere &amp; sphereA, const G3D::Sphere &amp; sphereB, Array&lt;G3D::Vector3&gt; &amp; contactPoints, Array&lt;G3D::Vector3&gt; &amp; contactNormals = ignoreArray)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='345'>/**
      Calculates the depth of penetration between two fixed spheres as well
      as the deepest point of Sphere A that penetrates Sphere B. The normal
      returned points &lt;B&gt;away&lt;/B&gt; from the object A, although it may
      represent a perpendicular to either the faces of object B or object A
      depending on their relative orientations.

      @param sphereA        Fixed Sphere A.
      @param sphereB        Fixed Sphere B.
      @param contactPoints    Sphere A&apos;s deepest point that penetrates Sphere B.
                             [Post Condition]
      @param contactNormals    Normal at penetration point. [Post Condition]

      @return Depth of penetration.  If there is no intersection between the
              objects then the depth will be a negative value.
     */</doc>
