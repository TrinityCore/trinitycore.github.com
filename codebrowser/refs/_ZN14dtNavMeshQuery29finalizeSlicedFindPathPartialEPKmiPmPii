<dec f='TrinityCore3.3.5/dep/recastnavigation/Detour/Include/DetourNavMeshQuery.h' l='243' type='dtStatus dtNavMeshQuery::finalizeSlicedFindPathPartial(const dtPolyRef * existing, const int existingSize, dtPolyRef * path, int * pathCount, const int maxPath)'/>
<def f='TrinityCore3.3.5/dep/recastnavigation/Detour/Source/DetourNavMeshQuery.cpp' l='1509' type='dtStatus dtNavMeshQuery::finalizeSlicedFindPathPartial(const dtPolyRef * existing, const int existingSize, dtPolyRef * path, int * pathCount, const int maxPath)'/>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Detour/Include/DetourNavMeshQuery.h' l='234'>/// Finalizes and returns the results of an incomplete sliced path query, returning the path to the furthest
	/// polygon on the existing path that was visited during the search.
	///  @param[in]		existing		An array of polygon references for the existing path.
	///  @param[in]		existingSize	The number of polygon in the @p existing array.
	///  @param[out]	path			An ordered list of polygon references representing the path. (Start to end.) 
	///  								[(polyRef) * @p pathCount]
	///  @param[out]	pathCount		The number of polygons returned in the @p path array.
	///  @param[in]		maxPath			The max number of polygons the @p path array can hold. [Limit: &gt;= 1]
	/// @returns The status flags for the query.</doc>
<dec f='TrinityCore6.x/dep/recastnavigation/Detour/Include/DetourNavMeshQuery.h' l='243' type='dtStatus dtNavMeshQuery::finalizeSlicedFindPathPartial(const dtPolyRef * existing, const int existingSize, dtPolyRef * path, int * pathCount, const int maxPath)'/>
<def f='TrinityCore6.x/dep/recastnavigation/Detour/Source/DetourNavMeshQuery.cpp' l='1509' type='dtStatus dtNavMeshQuery::finalizeSlicedFindPathPartial(const dtPolyRef * existing, const int existingSize, dtPolyRef * path, int * pathCount, const int maxPath)'/>
<doc f='TrinityCore6.x/dep/recastnavigation/Detour/Include/DetourNavMeshQuery.h' l='234'>/// Finalizes and returns the results of an incomplete sliced path query, returning the path to the furthest
	/// polygon on the existing path that was visited during the search.
	///  @param[in]		existing		An array of polygon references for the existing path.
	///  @param[in]		existingSize	The number of polygon in the @p existing array.
	///  @param[out]	path			An ordered list of polygon references representing the path. (Start to end.) 
	///  								[(polyRef) * @p pathCount]
	///  @param[out]	pathCount		The number of polygons returned in the @p path array.
	///  @param[in]		maxPath			The max number of polygons the @p path array can hold. [Limit: &gt;= 1]
	/// @returns The status flags for the query.</doc>
