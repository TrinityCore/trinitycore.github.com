<def f='include/boost/type_traits/detail/has_binary_operator.hpp' l='108'/>
<def f='include/boost/type_traits/detail/has_binary_operator.hpp' l='113'/>
<def f='include/boost/type_traits/detail/has_binary_operator.hpp' l='118'/>
<def f='include/boost/type_traits/detail/has_binary_operator.hpp' l='123'/>
<def f='include/boost/type_traits/detail/has_binary_operator.hpp' l='128'/>
<def f='include/boost/type_traits/detail/has_binary_operator.hpp' l='136'/>
<doc f='include/boost/type_traits/detail/has_binary_operator.hpp' l='132'>// otherwise checks if it is convertible to Ret using the sizeof trick
// based on overload resolution
// condition: Ret!=void and Ret!=dont_care and the operator does not return void</doc>
