<dec f='TrinityCore3.3.5/dep/recastnavigation/Recast/Include/Recast.h' l='902' type='bool rcBuildCompactHeightfield(rcContext * ctx, const int walkableHeight, const int walkableClimb, rcHeightfield &amp; hf, rcCompactHeightfield &amp; chf)'/>
<def f='TrinityCore3.3.5/dep/recastnavigation/Recast/Source/Recast.cpp' l='327' type='bool rcBuildCompactHeightfield(rcContext * ctx, const int walkableHeight, const int walkableClimb, rcHeightfield &amp; hf, rcCompactHeightfield &amp; chf)'/>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Recast/Source/Recast.cpp' l='318'>/// @par
///
/// This is just the beginning of the process of fully building a compact heightfield.
/// Various filters may be applied, then the distance field and regions built.
/// E.g: #rcBuildDistanceField and #rcBuildRegions
///
/// See the #rcConfig documentation for more information on the configuration parameters.
///
/// @see rcAllocCompactHeightfield, rcHeightfield, rcCompactHeightfield, rcConfig</doc>
<doc f='TrinityCore3.3.5/dep/recastnavigation/Recast/Include/Recast.h' l='887'>/// @}
/// @name Compact Heightfield Functions
/// @see rcCompactHeightfield
/// @{

/// Builds a compact heightfield representing open space, from a heightfield representing solid space.
///  @ingroup recast
///  @param[in,out]	ctx				The build context to use during the operation.
///  @param[in]		walkableHeight	Minimum floor to &apos;ceiling&apos; height that will still allow the floor area 
///  								to be considered walkable. [Limit: &gt;= 3] [Units: vx]
///  @param[in]		walkableClimb	Maximum ledge height that is considered to still be traversable. 
///  								[Limit: &gt;=0] [Units: vx]
///  @param[in]		hf				The heightfield to be compacted.
///  @param[out]	chf				The resulting compact heightfield. (Must be pre-allocated.)
///  @returns True if the operation completed successfully.</doc>
<use f='TrinityCore3.3.5/src/tools/mmaps_generator/MapBuilder.cpp' l='636' u='c' c='_ZN4MMAP10MapBuilder16buildMoveMapTileEjjjRNS_8MeshDataEPfS3_P9dtNavMesh'/>
<dec f='TrinityCore6.x/dep/recastnavigation/Recast/Include/Recast.h' l='902' type='bool rcBuildCompactHeightfield(rcContext * ctx, const int walkableHeight, const int walkableClimb, rcHeightfield &amp; hf, rcCompactHeightfield &amp; chf)'/>
<def f='TrinityCore6.x/dep/recastnavigation/Recast/Source/Recast.cpp' l='327' type='bool rcBuildCompactHeightfield(rcContext * ctx, const int walkableHeight, const int walkableClimb, rcHeightfield &amp; hf, rcCompactHeightfield &amp; chf)'/>
<doc f='TrinityCore6.x/dep/recastnavigation/Recast/Source/Recast.cpp' l='318'>/// @par
///
/// This is just the beginning of the process of fully building a compact heightfield.
/// Various filters may be applied, then the distance field and regions built.
/// E.g: #rcBuildDistanceField and #rcBuildRegions
///
/// See the #rcConfig documentation for more information on the configuration parameters.
///
/// @see rcAllocCompactHeightfield, rcHeightfield, rcCompactHeightfield, rcConfig</doc>
<doc f='TrinityCore6.x/dep/recastnavigation/Recast/Include/Recast.h' l='887'>/// @}
/// @name Compact Heightfield Functions
/// @see rcCompactHeightfield
/// @{

/// Builds a compact heightfield representing open space, from a heightfield representing solid space.
///  @ingroup recast
///  @param[in,out]	ctx				The build context to use during the operation.
///  @param[in]		walkableHeight	Minimum floor to &apos;ceiling&apos; height that will still allow the floor area 
///  								to be considered walkable. [Limit: &gt;= 3] [Units: vx]
///  @param[in]		walkableClimb	Maximum ledge height that is considered to still be traversable. 
///  								[Limit: &gt;=0] [Units: vx]
///  @param[in]		hf				The heightfield to be compacted.
///  @param[out]	chf				The resulting compact heightfield. (Must be pre-allocated.)
///  @returns True if the operation completed successfully.</doc>
<use f='TrinityCore6.x/src/tools/mmaps_generator/MapBuilder.cpp' l='633' u='c' c='_ZN4MMAP10MapBuilder16buildMoveMapTileEjjjRNS_8MeshDataEPfS3_P9dtNavMesh'/>
