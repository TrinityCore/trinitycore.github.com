<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Vector2.h' l='208' type='G3D::Vector2 G3D::Vector2::minAbs(const G3D::Vector2 &amp; v) const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Vector2.h' l='203'>/** Component-wise argmin(abs(), v.abs()).

        For the smaller magnitude vector, simply use &lt;code&gt;(a.squaredMagnitude() &lt; b.squaredMagnitude) ?  a : b&lt;/code&gt;.
        \sa max
     */</doc>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/Vector2.h' l='208' type='G3D::Vector2 G3D::Vector2::minAbs(const G3D::Vector2 &amp; v) const'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Vector2.h' l='203'>/** Component-wise argmin(abs(), v.abs()).

        For the smaller magnitude vector, simply use &lt;code&gt;(a.squaredMagnitude() &lt; b.squaredMagnitude) ?  a : b&lt;/code&gt;.
        \sa max
     */</doc>
