<def f='include/boost/functional/hash/detail/hash_float.hpp' l='66' type='std::size_t boost::hash_detail::hash_binary(char * ptr, std::size_t length)'/>
<use f='include/boost/functional/hash/detail/hash_float.hpp' l='103' u='c' c='_ZN5boost11hash_detail15float_hash_implET_NS_11enable_if_cIXaaaaaasr3std14numeric_limitsIS1_EE9is_iec559eqsr3std14numeric_limitsIS1_EE6digitsLi24Eeqsr11038692'/>
<use f='include/boost/functional/hash/detail/hash_float.hpp' l='117' u='c' c='_ZN5boost11hash_detail15float_hash_implET_NS_11enable_if_cIXaaaaaasr3std14numeric_limitsIS1_EE9is_iec559eqsr3std14numeric_limitsIS1_EE6digitsLi53Eeqsr3083499'/>
<use f='include/boost/functional/hash/detail/hash_float.hpp' l='130' u='c' c='_ZN5boost11hash_detail15float_hash_implET_NS_11enable_if_cIXaaaaaasr3std14numeric_limitsIS1_EE9is_iec559eqsr3std14numeric_limitsIS1_EE6digitsLi64Eeqsr10424825'/>
<use f='include/boost/functional/hash/detail/hash_float.hpp' l='143' u='c' c='_ZN5boost11hash_detail15float_hash_implET_NS_11enable_if_cIXaaaaaasr3std14numeric_limitsIS1_EE9is_iec559eqsr3std14numeric_limitsIS1_EE6digitsLi113Eeqs9574318'/>
<doc f='include/boost/functional/hash/detail/hash_float.hpp' l='60'>////////////////////////////////////////////////////////////////////////
        // Binary hash function
        //
        // Only used for floats with known iec559 floats, and certain values in
        // numeric_limits</doc>
