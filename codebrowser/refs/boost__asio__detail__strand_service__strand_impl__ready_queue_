<dec f='include/boost/asio/detail/strand_service.hpp' l='73' type='op_queue&lt;operation&gt;'/>
<use f='include/boost/asio/detail/impl/strand_service.hpp' l='45' u='m' c='_ZN5boost4asio6detail14strand_service16on_dispatch_exitD1Ev'/>
<use f='include/boost/asio/detail/impl/strand_service.hpp' l='46' u='m' c='_ZN5boost4asio6detail14strand_service16on_dispatch_exitD1Ev'/>
<use f='include/boost/asio/detail/impl/strand_service.ipp' l='36' u='m' c='_ZN5boost4asio6detail14strand_service19on_do_complete_exitD1Ev'/>
<use f='include/boost/asio/detail/impl/strand_service.ipp' l='37' u='m' c='_ZN5boost4asio6detail14strand_service19on_do_complete_exitD1Ev'/>
<use f='include/boost/asio/detail/impl/strand_service.ipp' l='64' u='a' c='_ZN5boost4asio6detail14strand_service16shutdown_serviceEv'/>
<use f='include/boost/asio/detail/impl/strand_service.ipp' l='120' u='m' c='_ZN5boost4asio6detail14strand_service11do_dispatchERPNS2_11strand_implEPNS1_25task_io_service_operationE'/>
<use f='include/boost/asio/detail/impl/strand_service.ipp' l='143' u='m' c='_ZN5boost4asio6detail14strand_service7do_postERPNS2_11strand_implEPNS1_25task_io_service_operationEb'/>
<use f='include/boost/asio/detail/impl/strand_service.ipp' l='164' u='m' c='_ZN5boost4asio6detail14strand_service11do_completeEPNS1_15task_io_serviceEPNS1_25task_io_service_operationERKNS_6system10error_codeEm'/>
<use f='include/boost/asio/detail/impl/strand_service.ipp' l='166' u='m' c='_ZN5boost4asio6detail14strand_service11do_completeEPNS1_15task_io_serviceEPNS1_25task_io_service_operationERKNS_6system10error_codeEm'/>
<offset>704</offset>
<doc f='include/boost/asio/detail/strand_service.hpp' l='70'>// The handlers that are ready to be run. Logically speaking, these are the
    // handlers that hold the strand&apos;s lock. The ready queue is only modified
    // from within the strand and so may be accessed without locking the mutex.</doc>
