<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Triangle.h' l='146' type='bool G3D::Triangle::intersect(const class Ray &amp; ray, float &amp; distance, float * baryCoord) const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Triangle.h' l='132'>/**
       @brief Intersect the ray at distance less than @a distance.

       @param distance Set to the maximum distance (can be G3D::inf())
       to search for an intersection.  On return, this is the smaller
       of the distance to the intersection, if one exists, and the original
       value.
       
       @param baryCoord  If a triangle is hit before @a distance, a
       the barycentric coordinates of the hit location on the triangle.
       Otherwise, unmodified.

       @return True if there was an intersection before the original distance.
     */</doc>
<def f='TrinityCore3.3.5/dep/g3dlite/source/Triangle.cpp' l='137' type='bool G3D::Triangle::intersect(const G3D::Ray &amp; ray, float &amp; distance, float * baryCoord) const'/>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/Triangle.h' l='146' type='bool G3D::Triangle::intersect(const class Ray &amp; ray, float &amp; distance, float * baryCoord) const'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Triangle.h' l='132'>/**
       @brief Intersect the ray at distance less than @a distance.

       @param distance Set to the maximum distance (can be G3D::inf())
       to search for an intersection.  On return, this is the smaller
       of the distance to the intersection, if one exists, and the original
       value.
       
       @param baryCoord  If a triangle is hit before @a distance, a
       the barycentric coordinates of the hit location on the triangle.
       Otherwise, unmodified.

       @return True if there was an intersection before the original distance.
     */</doc>
<def f='TrinityCore6.x/dep/g3dlite/source/Triangle.cpp' l='137' type='bool G3D::Triangle::intersect(const G3D::Ray &amp; ray, float &amp; distance, float * baryCoord) const'/>
