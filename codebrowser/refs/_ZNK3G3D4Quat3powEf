<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Quat.h' l='338' type='G3D::Quat G3D::Quat::pow(float r) const'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Quat.h' l='762' u='c' c='_Z3powRKN3G3D4QuatEd'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Quat.h' l='330'>/**
     Raise this quaternion to a power.  For a rotation, this is
     the effect of rotating x times as much as the original
     quaterion.

     Note that q.pow(a).pow(b) == q.pow(a + b)
     @cite Dam98 pg 21
     */</doc>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/Quat.h' l='338' type='G3D::Quat G3D::Quat::pow(float r) const'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/Quat.h' l='762' u='c' c='_Z3powRKN3G3D4QuatEd'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Quat.h' l='330'>/**
     Raise this quaternion to a power.  For a rotation, this is
     the effect of rotating x times as much as the original
     quaterion.

     Note that q.pow(a).pow(b) == q.pow(a + b)
     @cite Dam98 pg 21
     */</doc>
