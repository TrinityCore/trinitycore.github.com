<dec f='TrinityCore3.3.5/src/server/game/AI/SmartScripts/SmartScript.h' l='89' type='Unit * SmartScript::DoSelectLowestHpFriendly(float range, uint32 MinHPDiff)'/>
<use f='TrinityCore3.3.5/src/server/game/AI/SmartScripts/SmartScript.cpp' l='2870' u='c' c='_ZN11SmartScript12ProcessEventER17SmartScriptHolderP4UnitjjbPK9SpellInfoP10GameObject'/>
<def f='TrinityCore3.3.5/src/server/game/AI/SmartScripts/SmartScript.cpp' l='3619' type='Unit * SmartScript::DoSelectLowestHpFriendly(float range, uint32 MinHPDiff)'/>
<doc f='TrinityCore3.3.5/src/server/game/AI/SmartScripts/SmartScript.cpp' l='3588'>/*
void SmartScript::UpdateAIWhileCharmed(const uint32 diff) { }

void SmartScript::DoAction(const int32 param) { }

uint32 SmartScript::GetData(uint32 id)
{
    return 0;
}

void SmartScript::SetData(uint32 id, uint32 value) { }

void SmartScript::SetGUID(uint64 guid, int32 id) { }

uint64 SmartScript::GetGUID(int32 id)
{
    return 0;
}

void SmartScript::MovepointStart(uint32 id) { }

void SmartScript::SetRun(bool run) { }

void SmartScript::SetMovePathEndAction(SMART_ACTION action) { }

uint32 SmartScript::DoChat(int8 id, uint64 whisperGuid)
{
    return 0;
}*/
// SmartScript end</doc>
<dec f='TrinityCore6.x/src/server/game/AI/SmartScripts/SmartScript.h' l='89' type='Unit * SmartScript::DoSelectLowestHpFriendly(float range, uint32 MinHPDiff)'/>
<use f='TrinityCore6.x/src/server/game/AI/SmartScripts/SmartScript.cpp' l='2862' u='c' c='_ZN11SmartScript12ProcessEventER17SmartScriptHolderP4UnitjjbPK9SpellInfoP10GameObject'/>
<def f='TrinityCore6.x/src/server/game/AI/SmartScripts/SmartScript.cpp' l='3611' type='Unit * SmartScript::DoSelectLowestHpFriendly(float range, uint32 MinHPDiff)'/>
<doc f='TrinityCore6.x/src/server/game/AI/SmartScripts/SmartScript.cpp' l='3580'>/*
void SmartScript::UpdateAIWhileCharmed(const uint32 diff) { }

void SmartScript::DoAction(const int32 param) { }

uint32 SmartScript::GetData(uint32 id)
{
    return 0;
}

void SmartScript::SetData(uint32 id, uint32 value) { }

void SmartScript::SetGUID(uint64 guid, int32 id) { }

uint64 SmartScript::GetGUID(int32 id)
{
    return 0;
}

void SmartScript::MovepointStart(uint32 id) { }

void SmartScript::SetRun(bool run) { }

void SmartScript::SetMovePathEndAction(SMART_ACTION action) { }

uint32 SmartScript::DoChat(int8 id, uint64 whisperGuid)
{
    return 0;
}*/
// SmartScript end</doc>
