<def f='include/boost/asio/ip/basic_resolver_query.hpp' l='199' type='void boost::asio::ip::basic_resolver_query::basic_resolver_query&lt;InternetProtocol&gt;(const protocol_type &amp; protocol, const std::string &amp; host, const std::string &amp; service, resolver_query_base::flags resolve_flags = address_configured)'/>
<doc f='include/boost/asio/ip/basic_resolver_query.hpp' l='166'>/**
   * This constructor is typically used to perform name resolution for
   * communication with remote hosts.
   *
   * @param protocol A protocol object, normally representing either the IPv4 or
   * IPv6 version of an internet protocol.
   *
   * @param host A string identifying a location. May be a descriptive name or
   * a numeric address string. If an empty string and the passive flag has been
   * specified, the resolved endpoints are suitable for local service binding.
   * If an empty string and passive is not specified, the resolved endpoints
   * will use the loopback address.
   *
   * @param service A string identifying the requested service. This may be a
   * descriptive name or a numeric string corresponding to a port number. May
   * be an empty string, in which case all resolved endpoints will have a port
   * number of 0.
   *
   * @param resolve_flags A set of flags that determine how name resolution
   * should be performed. The default flags are suitable for communication with
   * remote hosts.
   *
   * @note On POSIX systems, host names may be locally defined in the file
   * &lt;tt&gt;/etc/hosts&lt;/tt&gt;. On Windows, host names may be defined in the file
   * &lt;tt&gt;c:\\windows\\system32\\drivers\\etc\\hosts&lt;/tt&gt;. Remote host name
   * resolution is performed using DNS. Operating systems may use additional
   * locations when resolving host names (such as NETBIOS names on Windows).
   *
   * On POSIX systems, service names are typically defined in the file
   * &lt;tt&gt;/etc/services&lt;/tt&gt;. On Windows, service names may be found in the file
   * &lt;tt&gt;c:\\windows\\system32\\drivers\\etc\\services&lt;/tt&gt;. Operating systems
   * may use additional locations when resolving service names.
   */</doc>
<use f='TrinityCore3.3.5/src/server/authserver/Realms/RealmList.cpp' l='92' u='c' c='_ZN9RealmList12UpdateRealmsEbRKN5boost6system10error_codeE'/>
<use f='TrinityCore3.3.5/src/server/authserver/Realms/RealmList.cpp' l='104' u='c' c='_ZN9RealmList12UpdateRealmsEbRKN5boost6system10error_codeE'/>
<use f='TrinityCore3.3.5/src/server/authserver/Realms/RealmList.cpp' l='114' u='c' c='_ZN9RealmList12UpdateRealmsEbRKN5boost6system10error_codeE'/>
<use f='TrinityCore3.3.5/src/server/worldserver/Main.cpp' l='460' u='c' c='_Z13LoadRealmInfov'/>
<use f='TrinityCore3.3.5/src/server/worldserver/Main.cpp' l='472' u='c' c='_Z13LoadRealmInfov'/>
<use f='TrinityCore3.3.5/src/server/worldserver/Main.cpp' l='482' u='c' c='_Z13LoadRealmInfov'/>
<use f='TrinityCore6.x/src/server/bnetserver/Realms/RealmList.cpp' l='112' u='c' c='_ZN9RealmList12UpdateRealmsERKN5boost6system10error_codeE'/>
<use f='TrinityCore6.x/src/server/bnetserver/Realms/RealmList.cpp' l='124' u='c' c='_ZN9RealmList12UpdateRealmsERKN5boost6system10error_codeE'/>
<use f='TrinityCore6.x/src/server/bnetserver/Realms/RealmList.cpp' l='134' u='c' c='_ZN9RealmList12UpdateRealmsERKN5boost6system10error_codeE'/>
<use f='TrinityCore6.x/src/server/worldserver/Main.cpp' l='475' u='c' c='_Z13LoadRealmInfov'/>
<use f='TrinityCore6.x/src/server/worldserver/Main.cpp' l='487' u='c' c='_Z13LoadRealmInfov'/>
<use f='TrinityCore6.x/src/server/worldserver/Main.cpp' l='497' u='c' c='_Z13LoadRealmInfov'/>
