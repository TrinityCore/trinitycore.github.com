<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='41' u='w' c='_ZN8EventMapC1Ev'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='56' u='w' c='_ZN8EventMap6UpdateEj'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='65' u='r' c='_ZNK8EventMap8GetTimerEv'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='182' u='r' c='_ZN8EventMap6RepeatEj'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='231' u='w' c='_ZN8EventMap11DelayEventsEj'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='231' u='r' c='_ZN8EventMap11DelayEventsEj'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='231' u='r' c='_ZN8EventMap11DelayEventsEj'/>
<dec f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='314' type='uint32'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.cpp' l='23' u='w' c='_ZN8EventMap5ResetEv'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.cpp' l='43' u='r' c='_ZN8EventMap13ScheduleEventEjjjh'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.cpp' l='52' u='r' c='_ZN8EventMap12ExecuteEventEv'/>
<use f='TrinityCore3.3.5/src/common/Utilities/EventMap.cpp' l='133' u='r' c='_ZNK8EventMap17GetTimeUntilEventEj'/>
<offset>0</offset>
<doc f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='304'>/**
    * @name _time
    * @brief Internal timer.
    *
    * This does not represent the real date/time value.
    * It&apos;s more like a stopwatch: It can run, it can be stopped,
    * it can be resetted and so on. Events occur when this timer
    * has reached their time value. Its value is changed in the
    * Update method.
    */</doc>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='41' u='w' c='_ZN8EventMapC1Ev'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='56' u='w' c='_ZN8EventMap6UpdateEj'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='65' u='r' c='_ZNK8EventMap8GetTimerEv'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='182' u='r' c='_ZN8EventMap6RepeatEj'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='231' u='w' c='_ZN8EventMap11DelayEventsEj'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='231' u='r' c='_ZN8EventMap11DelayEventsEj'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='231' u='r' c='_ZN8EventMap11DelayEventsEj'/>
<dec f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='314' type='uint32'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.cpp' l='23' u='w' c='_ZN8EventMap5ResetEv'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.cpp' l='43' u='r' c='_ZN8EventMap13ScheduleEventEjjjh'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.cpp' l='52' u='r' c='_ZN8EventMap12ExecuteEventEv'/>
<use f='TrinityCore6.x/src/common/Utilities/EventMap.cpp' l='133' u='r' c='_ZNK8EventMap17GetTimeUntilEventEj'/>
<offset>0</offset>
<doc f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='304'>/**
    * @name _time
    * @brief Internal timer.
    *
    * This does not represent the real date/time value.
    * It&apos;s more like a stopwatch: It can run, it can be stopped,
    * it can be resetted and so on. Events occur when this timer
    * has reached their time value. Its value is changed in the
    * Update method.
    */</doc>
