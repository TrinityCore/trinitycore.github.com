<inh f='TrinityCore3.3.5/src/server/game/AI/CoreAI/GameObjectAI.h' l='50' c='_ZN12GameObjectAI11GossipHelloEP6Player'/>
<def f='TrinityCore3.3.5/src/server/scripts/World/go_scripts.cpp' l='891' type='bool go_soulwell::go_soulwellAI::GossipHello(Player * player)'/>
<doc f='TrinityCore3.3.5/src/server/scripts/World/go_scripts.cpp' l='887'>/// Due to the fact that this GameObject triggers CMSG_GAMEOBJECT_USE
            /// _and_ CMSG_GAMEOBJECT_REPORT_USE, this GossipHello hook is called
            /// twice. The script&apos;s handling is fine as it won&apos;t remove two charges
            /// on the well. We have to find how to segregate REPORT_USE and USE.</doc>
<inh f='TrinityCore6.x/src/server/game/AI/CoreAI/GameObjectAI.h' l='50' c='_ZN12GameObjectAI11GossipHelloEP6Player'/>
<def f='TrinityCore6.x/src/server/scripts/World/go_scripts.cpp' l='840' type='bool go_soulwell::go_soulwellAI::GossipHello(Player * player)'/>
<doc f='TrinityCore6.x/src/server/scripts/World/go_scripts.cpp' l='836'>/// Due to the fact that this GameObject triggers CMSG_GAMEOBJECT_USE
            /// _and_ CMSG_GAMEOBJECT_REPORT_USE, this GossipHello hook is called
            /// twice. The script&apos;s handling is fine as it won&apos;t remove two charges
            /// on the well. We have to find how to segregate REPORT_USE and USE.</doc>
