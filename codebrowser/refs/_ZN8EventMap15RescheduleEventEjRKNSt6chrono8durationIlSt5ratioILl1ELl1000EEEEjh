<def f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='146' type='void EventMap::RescheduleEvent(uint32 eventId, const Milliseconds &amp; time, uint32 group = 0, uint8 phase = 0)'/>
<doc f='TrinityCore3.3.5/src/common/Utilities/EventMap.h' l='138'>/**
    * @name RescheduleEvent
    * @brief Cancels the given event and reschedules it.
    * @param eventId The id of the event.
    * @param time The time in milliseconds as std::chrono::duration until the event occurs.
    * @param group The group which the event is associated to. Has to be between 1 and 8. 0 means it has no group.
    * @param phase The phase in which the event can occur. Has to be between 1 and 8. 0 means it can occur in all phases.
    */</doc>
<def f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='146' type='void EventMap::RescheduleEvent(uint32 eventId, const Milliseconds &amp; time, uint32 group = 0, uint8 phase = 0)'/>
<doc f='TrinityCore6.x/src/common/Utilities/EventMap.h' l='138'>/**
    * @name RescheduleEvent
    * @brief Cancels the given event and reschedules it.
    * @param eventId The id of the event.
    * @param time The time in milliseconds as std::chrono::duration until the event occurs.
    * @param group The group which the event is associated to. Has to be between 1 and 8. 0 means it has no group.
    * @param phase The phase in which the event can occur. Has to be between 1 and 8. 0 means it can occur in all phases.
    */</doc>
