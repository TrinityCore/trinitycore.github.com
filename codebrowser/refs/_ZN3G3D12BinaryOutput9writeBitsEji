<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryOutput.h' l='408' type='void G3D::BinaryOutput::writeBits(uint32 bitString, int numBits)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryOutput.h' l='398'>/** Write numBits from bitString to the output stream.  Bits are numbered from
        low to high.
    
        Can only be 
        called between beginBits and endBits.  Bits written are semantically
        little-endian, regardless of the actual endian-ness of the system.  That is,
        &lt;CODE&gt;writeBits(0xABCD, 16)&lt;/CODE&gt; writes 0xCD to the first byte and 
        0xAB to the second byte.  However, if used with BinaryInput::readBits, the ordering
        is transparent to the caller.
      */</doc>
<def f='TrinityCore3.3.5/dep/g3dlite/source/BinaryOutput.cpp' l='519' type='void G3D::BinaryOutput::writeBits(uint32 value, int numBits)'/>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryOutput.h' l='408' type='void G3D::BinaryOutput::writeBits(uint32 bitString, int numBits)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryOutput.h' l='398'>/** Write numBits from bitString to the output stream.  Bits are numbered from
        low to high.
    
        Can only be 
        called between beginBits and endBits.  Bits written are semantically
        little-endian, regardless of the actual endian-ness of the system.  That is,
        &lt;CODE&gt;writeBits(0xABCD, 16)&lt;/CODE&gt; writes 0xCD to the first byte and 
        0xAB to the second byte.  However, if used with BinaryInput::readBits, the ordering
        is transparent to the caller.
      */</doc>
<def f='TrinityCore6.x/dep/g3dlite/source/BinaryOutput.cpp' l='519' type='void G3D::BinaryOutput::writeBits(uint32 value, int numBits)'/>
