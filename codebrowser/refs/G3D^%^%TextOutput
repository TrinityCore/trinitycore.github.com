<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/TextOutput.h' l='60'/>
<size>128</size>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/TextOutput.h' l='21'>/**
  Convenient formatting of ASCII text written to a file.
  &lt;P&gt;

  The core writeString, writeNumber, and writeSymbol methods map to TextInput&apos;s
  methods.  Number and Symbol each print an additional space that is used to 
  separate adjacent tokens.
  
  TextOutput::printf allows arbitrary text to be conveniently dumped
  en-masse.  Use [de]serialize(bool, TextOutput) and other overloads to read/write
  primitive types in a standardized manner and 

  &lt;P&gt;
  When a word-wrap line break occurs, all whitespace between words is replaced 
  with a single newline (the newline may be two characters-- see 
  G3D::TextOutput::Options::NewlineStyle).  Word wrapping occurs against
  the number of columns specified by Options::numColumns, &lt;I&gt;minus&lt;/I&gt; the current
  indent level.

  Indenting adds the specified number of spaces immediately after a newline.
  If a newline was followed by spaces in the original string, these are added
  to the indent spaces.  Indenting &lt;B&gt;will&lt;/B&gt; indent blank lines and will leave
  indents after the last newline of a file (if the indent level is non-zero at the end).

  &lt;P&gt;&lt;B&gt;Serialization/Marshalling&lt;/B&gt;
  &lt;DT&gt;Text serialization is accomplished using TextOutput by defining the pair of 
  methods:

  &lt;PRE&gt;
  void serialize(TextOutput&amp; to) const;
  void deserialize(TextInput&amp; ti);
  &lt;/PRE&gt;

  See also G3D::TextInput.

  &lt;P&gt;
  &lt;B&gt;BETA API&lt;/B&gt;
  &lt;DT&gt;This API is subject to change in future versions.
 */</doc>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/TextOutput.h' l='60'/>
<size>128</size>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/TextOutput.h' l='21'>/**
  Convenient formatting of ASCII text written to a file.
  &lt;P&gt;

  The core writeString, writeNumber, and writeSymbol methods map to TextInput&apos;s
  methods.  Number and Symbol each print an additional space that is used to 
  separate adjacent tokens.
  
  TextOutput::printf allows arbitrary text to be conveniently dumped
  en-masse.  Use [de]serialize(bool, TextOutput) and other overloads to read/write
  primitive types in a standardized manner and 

  &lt;P&gt;
  When a word-wrap line break occurs, all whitespace between words is replaced 
  with a single newline (the newline may be two characters-- see 
  G3D::TextOutput::Options::NewlineStyle).  Word wrapping occurs against
  the number of columns specified by Options::numColumns, &lt;I&gt;minus&lt;/I&gt; the current
  indent level.

  Indenting adds the specified number of spaces immediately after a newline.
  If a newline was followed by spaces in the original string, these are added
  to the indent spaces.  Indenting &lt;B&gt;will&lt;/B&gt; indent blank lines and will leave
  indents after the last newline of a file (if the indent level is non-zero at the end).

  &lt;P&gt;&lt;B&gt;Serialization/Marshalling&lt;/B&gt;
  &lt;DT&gt;Text serialization is accomplished using TextOutput by defining the pair of 
  methods:

  &lt;PRE&gt;
  void serialize(TextOutput&amp; to) const;
  void deserialize(TextInput&amp; ti);
  &lt;/PRE&gt;

  See also G3D::TextInput.

  &lt;P&gt;
  &lt;B&gt;BETA API&lt;/B&gt;
  &lt;DT&gt;This API is subject to change in future versions.
 */</doc>
