<dec f='include/boost/optional/optional.hpp' l='92'/>
<use f='include/boost/optional/optional.hpp' l='129' u='a'/>
<use f='include/boost/optional/optional.hpp' l='141' u='a'/>
<use f='include/boost/optional/optional.hpp' l='453' u='a'/>
<doc f='include/boost/optional/optional.hpp' l='88'>// GCC since 3.3 has may_alias attribute that helps to alleviate optimizer issues with
// regard to violation of the strict aliasing rules. The optional&lt; T &gt; storage type is marked
// with this attribute in order to let the compiler know that it will alias objects of type T
// and silence compilation warnings.</doc>
