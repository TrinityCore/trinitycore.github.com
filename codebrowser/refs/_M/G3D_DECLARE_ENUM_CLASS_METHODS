<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/enumclass.h' l='60'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/SplineExtrapolationMode.h' l='53' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/SplineExtrapolationMode.h' l='84' u='c'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/enumclass.h' l='24'>/**
\def G3D_DECLARE_ENUM_CLASS_METHODS

  \brief Creates a series of methods that turn a class into a scoped enumeration.

  Example of use:

  \code
  class Resource {
  public:
    enum Value {FUEL, FOOD, WATER} value;
    
    // i is the position the enum value in Value (not the enum value itself)
    static const char* toString(int i, Value&amp; v) {
        static const char* str[] = {&quot;FUEL&quot;, &quot;FOOD&quot;, &quot;WATER&quot;, NULL}; // Whatever your enum values are
        static const Value val[] = {FUEL, FOOD, WATER};             // Whatever your enum values are
        const char* s = str[i];
        if (s) {
            v = val[i];
        }
        return s;
    }

    G3D_DECLARE_ENUM_CLASS_METHODS(Resource);
  };
  G3D_DECLARE_ENUM_CLASS_HASHCODE(Resource);
  \endcode

  Extends the &quot;Intelligent Enum&quot; design pattern 
  http://www.codeguru.com/cpp/cpp/cpp_mfc/article.php/c4001/

  Enum classes are initialized to their zero value by default.

  See GLG3D/GKey.h and G3D/WrapMode for an example.
  \sa G3D_DECLARE_ENUM_CLASS_HASHCODE
 */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/enumclass.h' l='60'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/SplineExtrapolationMode.h' l='53' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/SplineExtrapolationMode.h' l='84' u='c'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/enumclass.h' l='24'>/**
\def G3D_DECLARE_ENUM_CLASS_METHODS

  \brief Creates a series of methods that turn a class into a scoped enumeration.

  Example of use:

  \code
  class Resource {
  public:
    enum Value {FUEL, FOOD, WATER} value;
    
    // i is the position the enum value in Value (not the enum value itself)
    static const char* toString(int i, Value&amp; v) {
        static const char* str[] = {&quot;FUEL&quot;, &quot;FOOD&quot;, &quot;WATER&quot;, NULL}; // Whatever your enum values are
        static const Value val[] = {FUEL, FOOD, WATER};             // Whatever your enum values are
        const char* s = str[i];
        if (s) {
            v = val[i];
        }
        return s;
    }

    G3D_DECLARE_ENUM_CLASS_METHODS(Resource);
  };
  G3D_DECLARE_ENUM_CLASS_HASHCODE(Resource);
  \endcode

  Extends the &quot;Intelligent Enum&quot; design pattern 
  http://www.codeguru.com/cpp/cpp/cpp_mfc/article.php/c4001/

  Enum classes are initialized to their zero value by default.

  See GLG3D/GKey.h and G3D/WrapMode for an example.
  \sa G3D_DECLARE_ENUM_CLASS_HASHCODE
 */</doc>
