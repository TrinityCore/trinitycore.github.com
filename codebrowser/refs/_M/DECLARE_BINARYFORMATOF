<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='93'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='105' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='107' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='108' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='109' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='110' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='111' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='112' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='113' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='114' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='116' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='117' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='119' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='120' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='121' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='122' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='123' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='124' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='126' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='127' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='128' u='c'/>
<use f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='129' u='c'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/BinaryFormat.h' l='82'>/**
 Macro to declare the underlying format (as will be returned by glFormatOf)
 of a type.  For example,

  &lt;PRE&gt;
    DECLARE_BINARYFORMATOF(Vector4, VECTOR4_BINFMT)
  &lt;/PRE&gt;

  Use this so you can make vertex arrays of your own classes and not just 
  the standard ones.
 */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='93'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='105' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='107' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='108' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='109' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='110' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='111' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='112' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='113' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='114' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='116' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='117' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='119' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='120' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='121' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='122' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='123' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='124' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='126' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='127' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='128' u='c'/>
<use f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='129' u='c'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/BinaryFormat.h' l='82'>/**
 Macro to declare the underlying format (as will be returned by glFormatOf)
 of a type.  For example,

  &lt;PRE&gt;
    DECLARE_BINARYFORMATOF(Vector4, VECTOR4_BINFMT)
  &lt;/PRE&gt;

  Use this so you can make vertex arrays of your own classes and not just 
  the standard ones.
 */</doc>
