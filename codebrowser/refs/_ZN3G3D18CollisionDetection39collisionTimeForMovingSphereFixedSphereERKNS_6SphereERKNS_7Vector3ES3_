<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='873' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedSphere(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const G3D::Sphere &amp; fixedSphere, G3D::Vector3 &amp; outLocation, G3D::Vector3 &amp; outNormal = ignore)'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1032' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedSphere(const G3D::Sphere &amp; movingSphere, const G3D::Vector3 &amp; velocity, const G3D::Sphere &amp; fixedSphere, G3D::Vector3 &amp; location, G3D::Vector3 &amp; outNormal = ignore)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='856'>/** Calculates time between the intersection of a moving sphere
        and a fixed sphere. 

        If they are already interpenetrating, returns 0 and @a
        location is the closest point on the surface of the fixed sphere
        to the center of the moving sphere.
        
        @param sphere            Moving sphere.
        @param velocity         Sphere&apos;s velocity.
        @param fixedSphere        Fixed Sphere.
        @param outLocation        Location of collision -- not center position of sphere
        at the collision time. [Post Condition]
        @param outNormal        Moving sphere&apos;s surface normal to collision [Post Condition]
        
        @return Time until collision.  If there is no collision then the return
        value will be inf().
    */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='873' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedSphere(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const G3D::Sphere &amp; fixedSphere, G3D::Vector3 &amp; outLocation, G3D::Vector3 &amp; outNormal = ignore)'/>
<def f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1032' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedSphere(const G3D::Sphere &amp; movingSphere, const G3D::Vector3 &amp; velocity, const G3D::Sphere &amp; fixedSphere, G3D::Vector3 &amp; location, G3D::Vector3 &amp; outNormal = ignore)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='856'>/** Calculates time between the intersection of a moving sphere
        and a fixed sphere. 

        If they are already interpenetrating, returns 0 and @a
        location is the closest point on the surface of the fixed sphere
        to the center of the moving sphere.
        
        @param sphere            Moving sphere.
        @param velocity         Sphere&apos;s velocity.
        @param fixedSphere        Fixed Sphere.
        @param outLocation        Location of collision -- not center position of sphere
        at the collision time. [Post Condition]
        @param outNormal        Moving sphere&apos;s surface normal to collision [Post Condition]
        
        @return Time until collision.  If there is no collision then the return
        value will be inf().
    */</doc>
