<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Matrix3.h' l='314' type='bool G3D::Matrix3::toEulerAnglesXYZ(float &amp; rfYAngle, float &amp; rfPAngle, float &amp; rfRAngle) const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Matrix3.h' l='309'>/**
     * The matrix must be orthonormal.  The decomposition is yaw*pitch*roll
     * where yaw is rotation about the Up vector, pitch is rotation about the
     * right axis, and roll is rotation about the Direction axis.
     */</doc>
<def f='TrinityCore3.3.5/dep/g3dlite/source/Matrix3.cpp' l='1383' type='bool G3D::Matrix3::toEulerAnglesXYZ(float &amp; rfXAngle, float &amp; rfYAngle, float &amp; rfZAngle) const'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/source/Matrix3.cpp' l='1382'>//----------------------------------------------------------------------------</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/Matrix3.h' l='314' type='bool G3D::Matrix3::toEulerAnglesXYZ(float &amp; rfYAngle, float &amp; rfPAngle, float &amp; rfRAngle) const'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Matrix3.h' l='309'>/**
     * The matrix must be orthonormal.  The decomposition is yaw*pitch*roll
     * where yaw is rotation about the Up vector, pitch is rotation about the
     * right axis, and roll is rotation about the Direction axis.
     */</doc>
<def f='TrinityCore6.x/dep/g3dlite/source/Matrix3.cpp' l='1383' type='bool G3D::Matrix3::toEulerAnglesXYZ(float &amp; rfXAngle, float &amp; rfYAngle, float &amp; rfZAngle) const'/>
<doc f='TrinityCore6.x/dep/g3dlite/source/Matrix3.cpp' l='1382'>//----------------------------------------------------------------------------</doc>
