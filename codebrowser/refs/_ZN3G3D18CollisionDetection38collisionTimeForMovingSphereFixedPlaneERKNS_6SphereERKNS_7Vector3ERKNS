<dec f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='776' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedPlane(const class Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const class Plane &amp; plane, G3D::Vector3 &amp; outLocation, G3D::Vector3 &amp; outNormal = ignore)'/>
<def f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1589' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedPlane(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const G3D::Plane &amp; plane, G3D::Vector3 &amp; location, G3D::Vector3 &amp; outNormal = ignore)'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1647' u='c' c='_ZN3G3D18CollisionDetection41collisionTimeForMovingSphereFixedTriangleERKNS_6SphereERKNS_7Vector3ERKNS_8TriangleERS4_Pf'/>
<use f='TrinityCore3.3.5/dep/g3dlite/source/CollisionDetection.cpp' l='1762' u='c' c='_ZN3G3D18CollisionDetection42collisionTimeForMovingSphereFixedRectangleERKNS_6SphereERKNS_7Vector3ES6_S6_S6_S6_RS4_S7_'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/CollisionDetection.h' l='762'>/**
     Calculates time between the intersection of a moving sphere and a fixed
     triangle.

     @param sphere        Moving sphere.
     @param velocity    Sphere&apos;s velocity.
     @param plane        Fixed Plane.
     @param outLocation    Location of collision -- not center position of sphere
                         at the collision time. [Post Condition]
     @param outNormal    Box&apos;s surface normal to collision [Post Condition]

     @return Time til collision.  If there is no collision then the return
             value will be inf().
     */</doc>
<dec f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='776' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedPlane(const class Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const class Plane &amp; plane, G3D::Vector3 &amp; outLocation, G3D::Vector3 &amp; outNormal = ignore)'/>
<def f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1589' type='static float G3D::CollisionDetection::collisionTimeForMovingSphereFixedPlane(const G3D::Sphere &amp; sphere, const G3D::Vector3 &amp; velocity, const G3D::Plane &amp; plane, G3D::Vector3 &amp; location, G3D::Vector3 &amp; outNormal = ignore)'/>
<use f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1647' u='c' c='_ZN3G3D18CollisionDetection41collisionTimeForMovingSphereFixedTriangleERKNS_6SphereERKNS_7Vector3ERKNS_8TriangleERS4_Pf'/>
<use f='TrinityCore6.x/dep/g3dlite/source/CollisionDetection.cpp' l='1762' u='c' c='_ZN3G3D18CollisionDetection42collisionTimeForMovingSphereFixedRectangleERKNS_6SphereERKNS_7Vector3ES6_S6_S6_S6_RS4_S7_'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/CollisionDetection.h' l='762'>/**
     Calculates time between the intersection of a moving sphere and a fixed
     triangle.

     @param sphere        Moving sphere.
     @param velocity    Sphere&apos;s velocity.
     @param plane        Fixed Plane.
     @param outLocation    Location of collision -- not center position of sphere
                         at the collision time. [Post Condition]
     @param outNormal    Box&apos;s surface normal to collision [Post Condition]

     @return Time til collision.  If there is no collision then the return
             value will be inf().
     */</doc>
