<def f='include/signal.h' l='307'/>
<dec f='include/signal.h' l='327' type='int sigvec(int __sig, const struct sigvec * __vec, struct sigvec * __ovec)'/>
<size>16</size>
<doc f='include/signal.h' l='306'>/* Structure passed to `sigvec&apos;.  */</doc>
<doc f='include/signal.h' l='322'>/* If VEC is non-NULL, set the handler for SIG to the `sv_handler&apos; member
   of VEC.  The signals in `sv_mask&apos; will be blocked while the handler runs.
   If the SV_RESETHAND bit is set in `sv_flags&apos;, the handler for SIG will be
   reset to SIG_DFL before `sv_handler&apos; is entered.  If OVEC is non-NULL,
   it is filled in with the old information for SIG.  */</doc>
