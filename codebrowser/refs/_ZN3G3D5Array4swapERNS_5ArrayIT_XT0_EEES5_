<def f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Array.h' l='265' type='static void G3D::Array::swap(Array&lt;T, MIN_ELEMENTS&gt; &amp; a, Array&lt;T, MIN_ELEMENTS&gt; &amp; b)'/>
<doc f='TrinityCore3.3.5/dep/g3dlite/include/G3D/Array.h' l='260'>/** Exchanges all data between the two arrays, which are required to have a common MemoryManager.
       This is a convenient
       way to avoid large array copies when handing off data without involving reference counting
       or manual memory management. Beware that pointers or references into the arrays will 
       access memory in the &lt;i&gt;other&lt;/i&gt; array after the swap. */</doc>
<def f='TrinityCore6.x/dep/g3dlite/include/G3D/Array.h' l='265' type='static void G3D::Array::swap(Array&lt;T, MIN_ELEMENTS&gt; &amp; a, Array&lt;T, MIN_ELEMENTS&gt; &amp; b)'/>
<doc f='TrinityCore6.x/dep/g3dlite/include/G3D/Array.h' l='260'>/** Exchanges all data between the two arrays, which are required to have a common MemoryManager.
       This is a convenient
       way to avoid large array copies when handing off data without involving reference counting
       or manual memory management. Beware that pointers or references into the arrays will 
       access memory in the &lt;i&gt;other&lt;/i&gt; array after the swap. */</doc>
