<def f='include/boost/optional/optional.hpp' l='487' type='pointer_const_type boost::optional_detail::optional_base::cast_ptr(const internal_type * p, is_not_reference_tag ) const'/>
<doc f='include/boost/optional/optional.hpp' l='484'>// If T is of reference type, trying to get a pointer to the held value must result in a compile-time error.
    // Decent compilers should disallow conversions from reference_content&lt;T&gt;* to T*, but just in case,
    // the following olverloads are used to filter out the case and guarantee an error in case of T being a reference.</doc>
